{"componentChunkName":"component---src-pages-search-js","path":"/search/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"excerpt":"해당 포스트는 인프런 김영한님의 자바 ORM 표준 JPA 프로그래밍 - 기본편 강의를 기반으로 작성하였습니다. 1. JPA의 Entity란? Entity란 DB에서 영속적으로 저장된 데이터를 자바 객체로 매핑하여 '인스턴스의 형태'로 존재하는 데이터를 말한다. JPA는 자바의 ORM의 표준인만큼 간단한 설정만으로 DB의 데이터를 자바 객체로 매핑하는 엔티…","fields":{"slug":"/Spring/2022-08-23-JPA-엔티티매핑/"},"frontmatter":{"date":"2022년 08월 23일","title":"[Spring JPA] Entity Mapping","tags":["SpringFramework","JPA","Entity"]}}},{"node":{"excerpt":"학습 동기 모모팀 프로젝트를 진행하며 모임 검색 및 모임 조회에 필터링을 하는 기능을 개발하게 되었다. 필터링 기능을 쉽게 생각하여 가벼운 마음으로 개발을 시작하였으나 막상 개발을 해보니 생각할 내용이 너무나도 많이 있었다. 먼저 우리의 조회 기능 조건은 다음과 같았다. 먼저 모임 조회를 하는 상황은 큰 분류와 같이 4가지 상황에서 조회를 할 수 있으며 …","fields":{"slug":"/Spring/2022-08-17-JPA-Specification/"},"frontmatter":{"date":"2022년 08월 17일","title":"[Spring JPA] JPA Specification을 통한 조회 필터링 기능 구현","tags":["SpringFramework","JPA","Specification","동적 쿼리"]}}},{"node":{"excerpt":"이전까지의 과정으로는 DB를 Spring의 인메모리 H2 DB를 사용하여 CI/CD과정이 진행될 때마다 DB데이터들이 초기화되었다. 이번 포스팅에서는 DB를 영구적으로 보관하기 위해 MySQL DB를 구축 및 연결하는 과정을 다뤄보려 한다. 1. DB서버 생성 및 MySQL 설치 DB서버는 앞선 과정에서 만들었던 EC2와는 다르게 외부와의 접근을 열어둘 …","fields":{"slug":"/DevOps/2022-08-14-CICD구축기4/"},"frontmatter":{"date":"2022년 08월 14일","title":"[DevOps] - Jenkins를 통한 CI/CD 구축기 4편 (Backend DB 구축)","tags":["DevOps","CI/CD","Jenkins","AWS","EC2","React","MySQL"]}}},{"node":{"excerpt":"1. DB서버 원격 접속하기 이전까지 백엔드, 프론트 배포를 위해 생성한 EC2는 페이지 요청에 대한 반환, API 요청에 대한 응답 등 외부에서 접속할 수 있어야 하기에 Public IP를 할당받았다. 하지만 DB의 경우는 백엔드 배포 서버의 Spring 프로젝트에서만 접속할 뿐 외부에서는 직접적인 접속이 있어서는 안된다. 이러한 보안상의 안정성을 위해…","fields":{"slug":"/DevOps/2022-08-13-MySQL설치_원격접속설정/"},"frontmatter":{"date":"2022년 08월 11일","title":"[AWS, MySQL] - Private Ec2에 MySQL설치 및 원격 접속 설정하기","tags":["DevOps","AWS","EC2","MySQL"]}}},{"node":{"excerpt":"학습 계기 프로젝트를 진행하다보면 보안상의 문제로 Git에 올리지 못하는 데이터들이 존재한다. 필자의 경우 배포된 DB 인스턴스의 정보, Google OAuth 인증키, JWT 토큰의 Secret key등이 존재하였다. 서비스 배포를 할 때, 이러한 데이터들은 배포 서버의 환경변수로 설정하는 방법 또는 스크립트를 통해 직접 값을 변경하는 방법 등으로 해당…","fields":{"slug":"/Git/2022-08-11-Git Submodule이란/"},"frontmatter":{"date":"2022년 08월 11일","title":"[Git] Submodule이란?","tags":["Git","Submodule"]}}},{"node":{"excerpt":"프론트엔드 CI/CD 배포 앞서 백엔드의 CI/CD 구축 과정을 다뤘다. 이번 포스팅에서는 Jenkins를 통한 프론트의 CI/CD 구축을 다뤄보려한다. 1. 배포 서버에 NGINX 설치하기 우리 프론트는 React를 기반으로 구현되었다. React 프로젝트를 배포하기 위해 Nginx를 먼저 설치해보겠다. Nginx에 대해 모르시는 분은 아래의 게시글을 …","fields":{"slug":"/DevOps/2022-07-28-CICD구축기3/"},"frontmatter":{"date":"2022년 07월 28일","title":"[DevOps] Jenkins를 통한 CI/CD 구축기 3편 (Frontend CI/CD 구축)","tags":["DevOps","CI/CD","Jenkins","AWS","EC2","React"]}}},{"node":{"excerpt":"이전 포스트에서는 젠킨스의 설치에 대해 다루어 봤다. 이번 포스트에서는 본격적으로 젠킨스를 통한 CI/CD 구축 과정을 다뤄보려고 한다.  팀에서 구축하고자 하는 CI/CD 구조는 다음과 같다. 현재 포스트에서는 5번 프론트엔드 프로젝트의 빌드 과정을 제외한 1번에서부터 6번까지의 구축 과정을 담아보았다. Jenkins의 Item 젠킨스에서 하나의 CI/…","fields":{"slug":"/DevOps/2022-07-17-CICD구축기2/"},"frontmatter":{"date":"2022년 07월 17일","title":"[DevOps] Jenkins를 통한 CI/CD 구축기 2편 (Backend CI/CD 구축)","tags":["DevOps","CI/CD","Jenkins","AWS","EC2","Spring"]}}},{"node":{"excerpt":"이전 포스트에서 CI/CD란 무엇인가에 대해 알아보았다. 이번 포스트에서는 우테코에서 진행중인 프로젝트에 Jenkin를 통해 CI/CD 구축한 과정을 정리해보고자 한다. 우선 이번 프로젝트에서 구축하려는 CI/CD 구조는 다음과 같다. 이번 포스트를 시작으로 Jenkins의 개념 및 환경 설정으로부터 시작하여 CI/CD 구축 과정을 살펴보겠다.  1. J…","fields":{"slug":"/DevOps/2022-07-15-CICD구축기1/"},"frontmatter":{"date":"2022년 07월 15일","title":"[DevOps] Jenkins를 통한 CI/CD 구축기 1편 (Jenkins 설치)","tags":["DevOps","CI/CD","Jenkins","Docker","AWS","EC2"]}}},{"node":{"excerpt":"개발자가 사용자들에게 서비스를 배포하기까지는 개발, 테스트, 빌드, 배포 등의 많은 과정들이 필요하다. 서비스를 한 번만 배포를 하면 이러한 과정을 수행하는 것이 문제가 없지만, 실제 서비스들은 추가적인 기능 개발과 예상하지 못한 오류 수정 등의 많은 코드의 변경이 필요하고 이러한 코드의 변경이 있을 때마다 위의 수많은 과정들을 반복해서 진행해야 할 것이…","fields":{"slug":"/DevOps/2022-07-13-CICD란/"},"frontmatter":{"date":"2022년 07월 13일","title":"CI/CD란?","tags":["DevOps","CI/CD"]}}},{"node":{"excerpt":"해당 포스트는 인프런 김영한님의 자바 ORM 표준 JPA 프로그래밍 - 기본편 강의를 기반으로 작성하였습니다. 1. ORM JPA의 개념을 알고자 한다면 먼저 ORM의 개넘을 알고 넘어가야 한다.\nORM은 Object Relational Mapping의 약자로 객체와 관계형 데이터베이스의 데이터를 자동으로 매핑해주는 일을 한다. 객체지향 프로그래밍은 클래…","fields":{"slug":"/Spring/2022-07-05-JPA란/"},"frontmatter":{"date":"2022년 07월 05일","title":"[Spring JPA] - JPA란?","tags":["SpringFramework","JPA"]}}},{"node":{"excerpt":"해당 포스트는 인프런 김영한님의 자바 ORM 표준 JPA 프로그래밍 - 기본편 강의를 기반으로 작성하였습니다. 1. 영속성 컨텍스트란? 영속성 컨텍스트란 JPA를 이해하는데 가장 중요한 개념이다. 이는 엔티티를 영구 저장하는 환경이라는 뜻을 가진 논리적인 개념으로 어플리케이션과 DB사이에서 객체를 보관하는 가상의 DB같은 역할을 한다. 즉, 애플리케이션에…","fields":{"slug":"/Spring/2022-07-06-엔티티-생명주기와-영속성-컨텍스트/"},"frontmatter":{"date":"2022년 07월 05일","title":"[Spring JPA] 엔티티 생명주기와 영속성 컨텍스트","tags":["SpringFramework","JPA","영속성 컨텍스트","Entity"]}}},{"node":{"excerpt":"1. ArgumentResolver란? ArgumentResolver는 어떠한 요청이 들어왔을 때 요청 객체로부터 원하는 객체를 만들어내는 일을 한다. 사실 우리도 지금껏 알게 모르게 ArgumentResolver를 사용해왔다. 우리가 요청의 Query Paramter, body, header 등에서 데이터를 추출하기 위해 사용하였던 아래의 스프링 어노테…","fields":{"slug":"/Spring/2022-06-29-ArgumentResolver란/"},"frontmatter":{"date":"2022년 06월 29일","title":"[Spring] ArgumentResolver란 무엇일까?","tags":["SpringFramework","ArgumentResolver"]}}},{"node":{"excerpt":"Spring이란? 스프링 프레임워크는 Java 애플리케이션을 개발하기 위한 인프라를 제공하고 있다. 이는 DI를 포함한 여러 기능들을 제공하고 있으며 아래와 같은 많은 모듈들을 제공하고 있어 개발자들은 개발 시간을 크게줄일 수 있다. Spring JDBC Spring MVC Spring Security Spring AOP Spring ORM Spring …","fields":{"slug":"/Spring/2022-06-28-Spring-vs-SpringBoot/"},"frontmatter":{"date":"2022년 06월 28일","title":"[Spring] Spring과 Spring Boot의 차이는 무엇일까?","tags":["SpringFramework","Spring Boot"]}}},{"node":{"excerpt":"프레임워크와 라이브러리는 개발자라면 많이 들어본 단어일 것이다. 하지만 둘의 차이를 설명해달라하면 유창하게 설명하지 못하는 개발자들이 많이 존재할 것이라 생각된다. 이번 포스트에서는 Framework와 Library의 개념과 둘의 차이에 대해 정리해보고자 한다. Framework 컴퓨터 프로그래밍에서, 소프트웨어 프레임워크(software framewor…","fields":{"slug":"/ETC/2022-06-27-Framework-vs-Library/"},"frontmatter":{"date":"2022년 06월 27일","title":"Framework vs Library (feat. IoC, 왜 프레임워크를 써야할까?)","tags":["Framework","Library","IoC"]}}},{"node":{"excerpt":"스프링에서 공통 기능을 제거하는 대표적인 방법으로는 Filter, Interceptor, AOP가 있다. 이전 포스트인 Filter란 무엇인가? 에 이어서 이번 포스트에서는 공통 기능 제거 방법 중 Interceptor에 대해 알아볼 것이다. 1. Intetceptor란? Interceptor는 filter처럼 경로를 지정하여, 해당 경로에 매칭되는 re…","fields":{"slug":"/Spring/2022-06-26-Interceptor란/"},"frontmatter":{"date":"2022년 06월 27일","title":"[Spring] Interceptor란 무엇일까?","tags":["SpringFramework","Interceptor"]}}},{"node":{"excerpt":"이전 포스트들에서 필터와 인터셉터에 대해 각각 비교해봤다. Filter란 무엇일까? Interceptor란 무엇일까? 두 포스트를 읽어보면 필터와 인터셉터의 관리하는 컨테이너와 실행 시점 등이 다르다는 것을 알 수 있을 것이다. 그래도 두 기능이 하는 일이 비슷하고 헷갈릴 수 있어 이번 포스트를 통해 둘의 차이점을 비교해보려 한다. 이번 포스트에서는 두 …","fields":{"slug":"/Spring/2022-06-27-Filter와Interceptor차이/"},"frontmatter":{"date":"2022년 06월 27일","title":"[Spring] Filter와 Interceptor의 차이 비교","tags":["SpringFramework","Filter","Interceptor"]}}},{"node":{"excerpt":"Filter란 무엇일까? 스프링에서 공통 기능을 제거하는 대표적인 방법으로는 Filter, Interceptor, AOP가 있다. 이번 포스트에서는 공통 기능 제거 방법 중 Filter에 대해 알아볼 것이다. 1. Filter란? 필터는 스프링에서 제공하는 것이 아닌 J2EE 표준 스펙 기능으로 Dispatcher Servlet으로 request가 가기 …","fields":{"slug":"/Spring/2022-06-25-Filter란/"},"frontmatter":{"date":"2022년 06월 25일","title":"[Spring] Filter란 무엇일까?","tags":["SpringFramework","Filter"]}}},{"node":{"excerpt":"테스트 - MockMvc 1. MockMvc란? 스프링 프레임워크는 3.2버전 이후로 Spring MVC를 Mocking하여 웹 애플리케이션을 테스트 하는 MockMVC를 제공하고 있다. MockMvc는 Spring MVC Test Framework이라고도 불리며 웹 애플리케이션을 실제 서버(서블릿 컨테이너)의 실행 없이 가상 환경에서 테스트 Mock r…","fields":{"slug":"/Spring/2022-06-24-MockMvc란/"},"frontmatter":{"date":"2022년 06월 24일","title":"[Spring 테스트] MockMvc란 무엇일까?","tags":["SpringFramework","Test","MockMvc"]}}},{"node":{"excerpt":"이번 게시글은 Spring에서 제공하는 테스트 라이브러리에 대한 간단한 설명과 @SpringBootTest를 이용한 통합 테스트를 하는 방법에 대해 정리해보고자 한다. 1. 테스트 의존성 추가하기 스프링은 테스트를 위해 아래의 2개의 Dependency를 제공하고 있다. spring-boot-test: core기능을 갖고 있다. spring-boot-st…","fields":{"slug":"/Spring/2022-06-23-SpringBootTest어노테이션-학습하기/"},"frontmatter":{"date":"2022년 06월 23일","title":"[Spring 테스트] @SpringBootTest를 이용해 통합 테스트하기","tags":["SpringFramework","Test","SpringBootTest"]}}},{"node":{"excerpt":"Java Validation API란? HTTP request를 통해 Post Request와 같이 데이터를 받는 request를 받을 경우 데이터가 올바른 형식인지, 올바른 값인지 확인을 하고 만약 올바르지 않은 값이 들어온다면 Bad request를 보내야 할 것이다. 예를 들어 위의 Json형식의 데이터가 POST request의 Body로 넘어왔다…","fields":{"slug":"/Spring/2022-06-22-Valid란/"},"frontmatter":{"date":"2022년 06월 22일","title":"[Spring] Validation Annotation이란? + DTO에서는 어디까지 검증해야할까?","tags":["SpringFramework","Java","Validation API","JSR 380","Valid"]}}},{"node":{"excerpt":"1. @RestController와 @Controller 스프링은 컨트롤러 어노테이션으로 @RestController와 @Controller어노테이션을 제공하고 있다. 이 두 어노테이션은 사용자의 요청을 받아 비즈니스 로직을 매핑해주고 결과를 반환해준다는 존재의 목적은 같지만 기본 반환값이 다르다는 차이점이 있다. 먼저 @RestController와 @C…","fields":{"slug":"/Spring/2022-06-21-Controller와RestController차이/"},"frontmatter":{"date":"2022년 06월 21일","title":"[Spring] @RestController와 @Controller 비교하기","tags":["SpringFramework","Spring MVC","Controller","RestController"]}}},{"node":{"excerpt":"1. Lombok이란? Java로 개발을 하다보면 getter, setter, constructor작성 등의 많은 코드를 작성해야한다. Lombok은 이러한 기계적인 코드들을 어노테이션을 기반으로 코드를 자동화하여 작성해주는 Java의 라이브러리이다. Lombok을 사용하면 코드의 길이를 줄여 코드를 단순화하고 코드의 가독성을 키울 수 있다. 코드 자동 …","fields":{"slug":"/Spring/2022-06-21-Lombok이란?/"},"frontmatter":{"date":"2022년 06월 21일","title":"[Spring] Lombok 이란?","tags":["SpringFramework","Lombok"]}}},{"node":{"excerpt":"우리는 스프링 프로젝트를 작성하면 Url과 Http Method에 매칭되는 controller 메서드들을 만들 것이다. 이러한 요청들을 처리해주는 메서드들을 한 컨트롤러에 모아둘 수도 있으나 프로젝트의 규모가 커지게 되면 수백, 수천개의 API들을 관리해야하기에 대부분 아래와 같이 API의 기능, URL의 prefix따라 클래스를 분리하여 관리할 것이다.…","fields":{"slug":"/Spring/2022-06-21-스프링MVC-동작방식/"},"frontmatter":{"date":"2022년 06월 21일","title":"[Spring] MVC 동작 방식 이해하기","tags":["SpringFramework","Spring MVC","Servlet","Dispatcher Servlet","Front Controller"]}}},{"node":{"excerpt":"1. 정적/동적 웹 페이지 서블릿이 생겨난 이유를 타고 올라가보면 동적 웹 페이지라는 개념이 나오게 된다. 과거에는 동적 웝 페이지의 지원이 되지 않아 정적 웹 페이지만 지원되었다. 서블릿은 동적 웹 페이지를 지원하는 기술이다. 서블릿에 대한 자세한 이야기는 이후에 하도록 하고 먼저 정적, 동적 웹 페이지에 대해 알아보겠다. 1.1. 정적 페이지 정적 웹…","fields":{"slug":"/Spring/2022-06-20-Servlet이란/"},"frontmatter":{"date":"2022년 06월 20일","title":"[Spring] Servlet이란?","tags":["Web","Servlet"]}}},{"node":{"excerpt":"1. 의존성 자동주입 1.1. 의존성 주입 방법 이전 포스팅 에서 말했듯이 스프링에서 빈을 등록하는 방법에는 @Component를 사용하거나 @Configuration, @Bean을 사용하여야 한다. 여기서 빈들 사이에 의존 관계가 있다면 어떻게 설정을 하여야 할까? 우선 @Configuration과  @Bean을 사용해 빈을 등록하는 방법에서는 설정 클…","fields":{"slug":"/Spring/2022-06-19-자동주입과-여러주입방법/"},"frontmatter":{"date":"2022년 06월 19일","title":"[Spring] 자동 주입과 여러 주입 방법","tags":["SpringFramework","Autowired","Constructor Injection","Setter Injection","Field Injection"]}}},{"node":{"excerpt":"1. Spring Bean이란? DI/IoC에 의해 우리는 스프링에게 객체의 생명주기를 스프링에게 맡기게 된다. 이로인해 스프링은 필요한 객체들을 Spring Container(IoC Container, Application Context)에 생성하고 생성한 객체들을 제공해주는데 이때 Spring Container가 관리하는 자바 객체(POJO(Plain…","fields":{"slug":"/Spring/2022-06-16-스프링-Bean/"},"frontmatter":{"date":"2022년 06월 16일","title":"[Spring] Bean이란 무엇일까?","tags":["SpringFramework","Bean"]}}},{"node":{"excerpt":"@RequestParam, @RequestBody, @ModelAndAttribute 세가지 annotation은 모두 request의 데이터를 받아오기 위해 사용됩니다. @RequestParam 공식 문서를 보면 RequestParam은 다음과 같이 설명합니다. For access to the Servlet request parameters(that i…","fields":{"slug":"/Spring/2022-06-15-RequestParam-RequestBody-ModelAndAttribute비교/"},"frontmatter":{"date":"2022년 06월 15일","title":"[Spring] - @RequestParam, @RequestBody, @ModelAndAttribute 차이 비교","tags":["SpringFramework","@RequestParam","@RequestBody","@ModelAndAttribute"]}}},{"node":{"excerpt":"DI (Dependency Injection) DI는 스프링의 3대 핵심 기술 중 하나로 외부에서 두 객체 간의 관계를 결정해주는 패턴이다.\n이는 객체의 관계 사이에 인터페이스를 둬서 클래스 레벨에서는 의존 관계가 고정되지 않도록 하고 런타임시에 의존 주입을 하여 결합도를 낮추고 유연성을 높여준다. 스프링의 3대 핵심 기술로는 IOC/DI, AOP, PS…","fields":{"slug":"/Spring/2022-06-14-스프링-DI-IoC/"},"frontmatter":{"date":"2022년 06월 14일","title":"[Spring] DI,IoC란 무엇일까?","tags":["SpringFramework","DI","IoC"]}}},{"node":{"excerpt":"스프링에 해당 Bean들을 주입하였는데, Bean이 없어 Autowired를 할 수 없는 메시지가 나올 때가 있다. 이럴 경우 실제로 Bean 주입이 없을 수도 있으나, IntelliJ의 오류로 프로그램 실행 전에 Bean이 없다고 판단할 수도 있다. 그래서 이러한 에러가 발견될 경우, 먼저 프로그램 실행을 해보고, 그 후에 Bean이 실제로 생성되지 않…","fields":{"slug":"/Spring/2022-05-02-스프링-couldnot-autowired-no-bean/"},"frontmatter":{"date":"2022년 05월 02일","title":"[Spring 에러처리] Could not autowired. No bean of~","tags":["SpringFramework","warning"]}}},{"node":{"excerpt":"초보 웹 개발자를 위한 스프링 5 책의 내용을 학습하던 중, 아래와 같은 warning메시지가 뜨는 것을 확인했습니다.  위의 warning 메시지는 스프링 구버전에 있는 에러 중의 하니이다. 해당 경고문의 해결은 간단하게도 Spring Framework 5.1이상, Spring Boot 2.1이상의 버전으로 업그레이드 하면 사라진다.  5.0.2버전이었…","fields":{"slug":"/Spring/2022-05-02-스프링-error-Illegal-reflection/"},"frontmatter":{"date":"2022년 05월 02일","title":"[Spring 에러처리] Illegal reflective access by org.springframework.cglib.core.ReflectUtils","tags":["SpringFramework","warning"]}}},{"node":{"excerpt":"지난 GET API에 대해 공부한 것에 이어 오늘은 POST API에 대해 공부해보고자 한다. 먼저 POST API의 특징에 대해 알아보자 POST API의 특징 리소스의 생성 및 추가하는 작업을 해주는 API이다. CRUD에서 C에 해당한다. POST Request를 반복한다면 데이터들은 계속 추가될 것이고 서버는 매번 다른 응답을 나타낼 것이다. 이때…","fields":{"slug":"/Spring/2022-04-22-Spring-Post-Mapping/"},"frontmatter":{"date":"2022년 04월 22일","title":"[Spring] PostMapping","tags":["SpringFramework","PostMapping"]}}},{"node":{"excerpt":"REST API디자인을 하기 위해서 자원에 대한 행위들은 HTTP Method로 표현을 해야한다. HTTP Method에는 GET, POST, PUT, DELETE 등이 존재한다. 오늘은 Spring Boot에서 GET API를 사용하는 방법에 대해 알아볼 것이다. GET API의 특징 리소스를 취득하는 작업을 하는 API이다. CRUD에서 R에 해당한다…","fields":{"slug":"/Spring/2022-04-21-Spring-Get-Mapping/"},"frontmatter":{"date":"2022년 04월 21일","title":"[Spring] GetMapping","tags":["SpringFramework","GetMapping"]}}},{"node":{"excerpt":"우아한 테크코스 미션을 하다보면 각각 단계별로 적게는 수십개, 많게는 100개가 넘는 커밋 기록들이 쌓이게 됩니다.\n하지만 이러한 커밋 기록들은 master(main)브랜치에 merge가 되어야만 우리의 깃허브에 잔디로 남게 됩니다. 저는 개인적으로 깃허브의 잔디는 내가 이 날 이만큼 개발 공부를 했다는 것을 표현할 수 있는 수단이라고 생각합니다.\n그런데…","fields":{"slug":"/Git/2022-03-23-미션코드로-잔디심기/"},"frontmatter":{"date":"2022년 03월 21일","title":"[Git] 미션 코드로 잔디 심기","tags":["Git","잔디 심기"]}}},{"node":{"excerpt":"피드백을 주고받은 PR & 작성 코드 [1단계 - 블랙잭] 렉스(오성원) 미션 제출합니다. #257 작성한 1단계 미션 코드 [2단계 - 블랙잭(베팅)] 렉스(오성원) 미션 제출합니다. #311 작성한 2단계 미션 코드 피드백 정리 1. 상황에 맞는 적절한 예외를 던지자 코멘트 링크 저는 지금까지 앞선 미션을 진행하면서는 발생하는 예외상황들을 모두 Ill…","fields":{"slug":"/Woowacourse/2022-03-21-우테코-레벨1-블랙잭-피드백정리/"},"frontmatter":{"date":"2022년 03월 21일","title":"[우아한테크코스] 레벨1 블랙잭 미션 피드백 정리","tags":["Woowacourse","피드백 정리"]}}},{"node":{"excerpt":"테코톡 발표 (3월 10일)  과거 유튜브를 통해서만 접하였던 테코톡을..드디어 찍었습니다. 제가 발표한 주제는 bit branch 전략이었습니다. 우테코에 들어와 이전까지 몰랐던 git에 대해 배우다보니\n혼자 추가적으로 공부하며 git branch전략까지 배우게 되었고, 해당 내용이 매우 흥미롭게 느껴져서 발표까지 하게 되었습니다. 각자의 발표는 준비 …","fields":{"slug":"/Woowacourse/2022-03-21-우테코-레벨1-블랙잭-회고/"},"frontmatter":{"date":"2022년 03월 21일","title":"[우아한테크코스] 레벨1 블랙잭 미션 회고 (3월 8일 ~ 21일)","tags":["Woowacourse","회고록"]}}},{"node":{"excerpt":"피드백을 주고받은 PR [1단계 - 로또(자동)] 렉스(오성원) 미션 제출합니다. #390 [2단계 - 로또(자동)] 렉스(오성원) 미션 제출합니다. #471 피드백 정리 1. for-loop를 Stream.forEach()로 바꾸지 말아야 할 이유 코멘트 링크 스트림은 Java8버전부터 나온 최신 기술입니다. 하지만 자바의 최신 기술이라고해서 무조건 좋…","fields":{"slug":"/Woowacourse/2022-03-07-우테코-레벨1-로또-피드백정리/"},"frontmatter":{"date":"2022년 03월 07일","title":"[우아한테크코스] 레벨1 로또 미션 피드백 정리","tags":["Woowacourse","피드백 정리"]}}},{"node":{"excerpt":"미션진행 이번에 진행한 로또 미션은 새로운 페어인 써머와 함께했습니다.\n그리고 이전 스컬과 미션을 진행했던 것처럼 이번 미션 또한 써머와 직접 만나서 진행을 해봤습니다😁 미션을 진행해보니 확실히 지난 자동차 미션보다는 난의도가 올라갔더군요😭\n이번 미션에는 지난번 미션에서 아래의 새로운 추가 요구사항이 생겼어요. Java Enum을 적용한다. 모든 원시 값…","fields":{"slug":"/Woowacourse/2022-03-07-우테코-레벨1-로또-회고/"},"frontmatter":{"date":"2022년 03월 07일","title":"[우아한테크코스] 레벨1 로또 미션 회고  (2월 22일 ~ 3월 7일)","tags":["Woowacourse","회고록"]}}},{"node":{"excerpt":"Git Branch 전략이란? 혼자 개발을 할 경우, git의 브랜를 아래와 같이 특정 작업을 할 때 새로운 브랜치를 새로 만들어 사용하거나 하나의 브랜치만을 사용하며 개발을 할 것입니다.\n 브랜치를 별다른 전략 없이 사용할 경우 혼자 개발을 할 때는 문제가 생겨도 나 자신만을 탓하면 끝이지만 팀 단위로 개발을 할 때는 다릅니다. 팀 단위로 개발을 할 경…","fields":{"slug":"/Git/2022-03-05-Git-Branch전략/"},"frontmatter":{"date":"2022년 03월 05일","title":"Git Branch 전략","tags":["Git","Github","Git Flow","Github Flow","Git Branch Strategy"]}}},{"node":{"excerpt":"개발을 하다보면 Github에서 다음과 같은 \"No newline at end of file\"이라는 메시지를 볼 때가 있습니다.  로컬에서 개발을 하고 애플리케이션을 구동하였을 때는 아무 문제가 없었는데 왜 이러한 오류표시가 나오고 해당 오류는 도대체 어떤 오류일까요? 간단하게 설명을 하자면 UNIX의 표준으로는 파일 마지막에 개행이 있어야하는데 작성 파…","fields":{"slug":"/Git/2022-03-03-파일의_마지막_개행/"},"frontmatter":{"date":"2022년 03월 03일","title":"No newline at a end of file, 파일의 끝에는 개행 추가❗️","tags":["Git"]}}},{"node":{"excerpt":"우아한테크코스의 첫번째 미션이 오늘로 끝이 납니다.\n미션을 진행하며 저의 첫번째 리뷰어였던 미르에게 많은 피드백을 받았는데 받은 피드백 내용들을 앞으로도 잊지 않기 위해\n정리를 해보고자 합니다. 앞으로도 미션이 끝날 때마다 미션 단위로 피드백 정리 및 회고록을 작성해볼 예정입니다. 그럼 지금부터 첫번째 미션인 자동차 경주의 피드백 정리를 시작하겠습니다. …","fields":{"slug":"/Woowacourse/2022-02-21-우테코-레벨1-자동차경주-피드백정리/"},"frontmatter":{"date":"2022년 02월 21일","title":"[우아한테크코스] 레벨1 자동차경주 미션 피드백 정리","tags":["Woowacourse","피드백 정리"]}}},{"node":{"excerpt":"2월 8일 우테코 정식 기간이 시작되고 벌써 2주라는 시간이 흘렀네요. 크루들의 블로그를 보면 일주일 단위로 회고록을 올리는 크루들이 많았지만, 저는 우아한테크코스 기간이 10개월이라는 매우 긴 기간임을 감안하여\n미션당 한번의 회고를 작성해볼까합니다. 오늘 작성하는 회고록은 2주라는 시간동안 저는 어떤 활동을 했는지, 어떤 것을 배우고 공부하였는지, 여러…","fields":{"slug":"/Woowacourse/2022-02-21-우테코-레벨1-자동차경주-회고/"},"frontmatter":{"date":"2022년 02월 21일","title":"[우아한테크코스] 레벨1 자동차경주 미션 회고 (2월 9일 ~ 21일)","tags":["Woowacourse","회고록"]}}},{"node":{"excerpt":"저는 대학생활을 할 때부터 GitHub을 사용해왔지만 지금까지 GitHub을 수동적으로 단순히 팀 프로젝트를 할 때 코드를 공유하는 용도와 개인적인 개발 기록공간으로만 사용해왔습니다. 물론 Git의 정확한 의미와 branch, rebase, pull request 등의 구체적인 여러 기능들을 모르고말이죠.. 심지어 Git의 명령어들을 잘 사용하지 못하여 …","fields":{"slug":"/Git/2022-02-17-Git이란/"},"frontmatter":{"date":"2022년 02월 17일","title":"Git이란?","tags":["Git","Github"]}}},{"node":{"excerpt":"12월 30일인 어제 우테코의 최종 결과가 나왔습니다.\n최종 코딩테스트에서 모든 기능을 완벽하게 구현하지 못하고 구현하지 못한 부분도 있어서 떨어지면 어떡하지?하는 불안감이 있었으나 합격이라는 결과를 받았습니다.😁😁  이로써 22년 2월부터 우테코 백엔드 4기 교육생으로 10개월이라는 기간동안 교육을 받으며 성장할 수 있게 되었습니다. 우테코가 시작하기까…","fields":{"slug":"/Woowacourse/2021-12-31-우테코-최종-결과/"},"frontmatter":{"date":"2021년 12월 31일","title":"[우테코] 최종 결과","tags":["Woowacourse"]}}},{"node":{"excerpt":"오늘 드디어 우아한테크코스 4기의 선별과정의 마지막 과정인 최종 코딩테스트를 봤습니다. 최종 코딩테스트의 문제는 작년 3기의 선별과정의 최종 미션이 3주차 미션과 비슷한 내용이어서 올해도 마지막 3주차 과제였던 자판기 미션 과 비슷한 내용의 미션일거라 예상을 하였습니다. 하지만 저의 예상과는 다르게 3주차 미션과 완전히 다른 미션이 나왔습니다. 올해 우테…","fields":{"slug":"/Woowacourse/2021-12-18-우테코-최종-코딩테스트-후기/"},"frontmatter":{"date":"2021년 12월 18일","title":"[우테코] 최종 코딩테스트 후기","tags":["Woowacourse","회고록"]}}},{"node":{"excerpt":"📝 D-1 오늘은 원래의 예정했던대로 프리코스기간에 마지막으로 하였던 과제를 다시 풀어봤습니다.\n최종 코딩테스트가 하루 남은 만큼 오늘도 실제 시험에 응한다는 마인드로 5시간안에 문제 풀이를 하자!!는 목표를 세우며 문제 풀이를 하였습니다. 일단 결론부터 말씀드리면 오늘 문제를 처음부터 풀이만 하는데 소모한 시간은 3시간 40분 정도가 소모됐으며 시간이 …","fields":{"slug":"/Woowacourse/2021-12-17-우테코-최종-코딩테스트-대비2/"},"frontmatter":{"date":"2021년 12월 17일","title":"[우테코] 최종 코딩테스트 대비-2","tags":["Woowacourse","회고록"]}}},{"node":{"excerpt":"최종 코딩테스트 일정 우테코 프리코스 기간이 14일 화요일로 종료가 되었고 바로 평상시와 과제 안내처럼 수요일 15시에 최종 코딩테스트 안내 메일을 받았습니다.  원래는 오프라인으로 치루는 시험이지만 최근 코로나 확진자가 역대급으로 많이 나오게 되어 지난 3주차 과제 안내에서 말한 바와 같이 올해 최종 코딩테스트는 비대면으로 치루게 되었습니다.. 지원자들…","fields":{"slug":"/Woowacourse/2021-12-16-우테코-최종-코딩테스트-대비1/"},"frontmatter":{"date":"2021년 12월 16일","title":"[우테코] 최종 코딩테스트 대비-1","tags":["Woowacourse"]}}},{"node":{"excerpt":"싱글톤 패턴이란? 소프트웨어 디자인 패턴에서 싱글턴 패턴(Singleton pattern)을 따르는 클래스는, 생성자가 여러 차례 호출되더라도 실제로 생성되는 객체는 하나이고 최초 생성 이후에 호출된 생성자는 최초의 생성자가 생성한 객체를 리턴한다. 이와 같은 디자인 유형을 싱글턴 패턴이라고 한다. 주로 공통된 객체를 여러개 생성해서 사용하는 DBCP(D…","fields":{"slug":"/ETC/2021-12-14_싱글턴 패턴이란/"},"frontmatter":{"date":"2021년 12월 14일","title":"싱글턴(Singleton) 패턴이란?","tags":["Java","Singleton","Design Pattern"]}}},{"node":{"excerpt":"3주차 과제를 들어가기 앞서 이번 과제는 마지막 미션인 만큼 시작하기 앞서 2주차 피드백과 2주차 과제에서 작성한 나의 코드 및 다른 지원자들의 코드 리뷰를 하는데 많은 시간을 투자하였습니다. 해당 리뷰에 대한 정리 자료는 다음 링크를 통해 확인하실 수 있습니다.\n2주차 피드백 정리 2주차 과제 리뷰를 하며 가장 크게 놀랐던 점은 다른 사람의 코드 리뷰를…","fields":{"slug":"/Woowacourse/2021-12-14-우테코 프리코스 3주차 과제 회고/"},"frontmatter":{"date":"2021년 12월 14일","title":"[우테코 프리코스] 3주차 과제 회고","tags":["Woowacourse","회고록"]}}},{"node":{"excerpt":"우테코란? 우테코는 우아한 형제들에서 개발 인력 양성을 위한 무료 IT교육 프로그램입니다.\n저는 이번 웹 백엔드 4기 교육생으로 지원을 하였고 1차 합격자가 되어 프리코스 과정을 진행하게 되었고 벌써 3주라는 시간이 흘러 프리코스 기간이 끝났습니다.  3주라는 시간은 누군가에게는 길게 느껴지겠지만 저에게 지난 3주간의 시간은 매우 빠르고 짧은 시간이었으며…","fields":{"slug":"/Woowacourse/2021-12-14-우테코-프리코스-참여후기/"},"frontmatter":{"date":"2021년 12월 14일","title":"[우테코 프리코스] 프리코스 참여후기","tags":["Woowacourse"]}}},{"node":{"excerpt":"3주차 과제를 들어가기 앞서 이번 과제는 마지막 미션인 만큼 시작하기 앞서 2주차 피드백과 2주차 과제에서 작성한 나의 코드 및 다른 지원자들의 코드 리뷰를 하는데 많은 시간을 투자하였습니다. 해당 리뷰에 대한 정리 자료는 다음 링크를 통해 확인하실 수 있습니다.\n2주차 피드백 정리 2주차 과제 리뷰를 하며 가장 크게 놀랐던 점은 다른 사람의 코드 리뷰를…","fields":{"slug":"/Woowacourse/2021-12-14-우테코_프리코스_3주차_과제회고/"},"frontmatter":{"date":"2021년 12월 14일","title":"[우테코 프리코스] 3주차 과제 회고","tags":["Woowacourse","회고록"]}}},{"node":{"excerpt":"3주차 과제를 하기 앞서... 1주차 과제를 한 후 공통 피드백을 받았을 때는 1주차 과제 회고 정리에 간단하게 1주차 과제 피드백 리뷰를 정리하였습니다. 지난주와 같이 이번주에 2주차 과제 피드백을 받게 되었고 피드백을 읽다보니 지난주 과제에 지켜지지 않은 점들이 보여 따로 정리를 하게 되었습니다. 또한 다른 지원자들의 코드와 제가 작성한 코드를 비교하…","fields":{"slug":"/Woowacourse/2021-12-10-우테코 프리코스 2주차 피드백 정리/"},"frontmatter":{"date":"2021년 12월 10일","title":"[우테코 프리코스] 2주차 피드백 정리","tags":["Woowacourse","피드백 정리"]}}},{"node":{"excerpt":"우테코 프리패스 과정을 진행하며 보다 나은 코드와 코드의 구조를 만들고자 다른 지원자들의 코드 리뷰를 하며 제가 작성한 코드와 비교를 해봤습니다.\n다른 지원자들의 제출 코드들을 보니 많은 지원자들이 MVC패턴을 적용하여 과제를 진행한 것을 확인할 수 있었습니다.\nMVC패턴은 이전에 스프링 프레임워크 학습을 하며 사용을 하였으나 스프링 프로젝트 외의 다른 …","fields":{"slug":"/ETC/2021-12-07_MVC패턴이란/"},"frontmatter":{"date":"2021년 12월 07일","title":"MVC패턴이란?","tags":["MVC","Design Pattern"]}}},{"node":{"excerpt":"프리코스 1주차 피드백 리뷰 프리코스 1주차가 끝나고 2주차 과제가 나오기 앞서 1주차 과제에 대한 공통적인 리뷰를 받았습니다. 크게 정리하면 다음과 같은 리뷰들이 있었습니다. 변수, 메서드, 클래스의 이름이 의도를 드러내며 축약하지 않게 작성하여라 컨벤션을 모두 지켰는가? 지키지 않았으면 IDE의 코드 정렬기능을 활용하여라 의미 없는 주석을 달지 말아라…","fields":{"slug":"/Woowacourse/2021-12-03-우테코 프리코스 2주차 과제 회고/"},"frontmatter":{"date":"2021년 12월 03일","title":"[우테코 프리코스] 2주차 과제 회고","tags":["Woowacourse","회고록"]}}},{"node":{"excerpt":"우테코 프리코스를 오기까지 🔥 우테코와의 인연은 취업 준비를 하던중 친구로부터 \"난 우테코를 지원하겠다~\"는 이야기를 듣고 우테코에 대해 조사를 하며 시작되었습니다. 우테코에 대해 조사를 하며 우테코는 개발자로 성장하기에 좋은 모든 환경을 갖추었다는 것을 깨달았고 우테코에 들어가서 개발자로서 큰 성장을 하겠다는 목표를 세워 꾸준히 공부를 하였습니다. 특히…","fields":{"slug":"/Woowacourse/2021-11-28-우테코 프리코스 1주차 과제 회고/"},"frontmatter":{"date":"2021년 11월 28일","title":"[우테코 프리코스] 1주차 과제 회고","tags":["Woowacourse","회고록"]}}},{"node":{"excerpt":"목표 스크립트로 CHANGELOG.md를 작성할 수 있다. git bisect를 사용하여 중요하지 않은 커밋을 무시할 수 있다. (Formatting과 같은 중요한 커밋은 아닌 경우) 커밋 기록 탐색시 더 좋은 정보를 제공한다. ※ git bisect\n커밋의 특정 범위 내에서 이진 탐색을 통해 문제가 발생한 최초의 커밋을 찾는데 도움을 주는 git의 기능…","fields":{"slug":"/Git/2021-11-25-Git커밋 메시지 규약/"},"frontmatter":{"date":"2021년 11월 25일","title":"Git 커밋 메세지 규약 정리 - The AngularJS commit conventions.","tags":["Git","git 커밋 메시지 규약","AngularJS commit conventions"]}}}]}},"pageContext":{}},"staticQueryHashes":["3911196313"]}