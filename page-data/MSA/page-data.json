{"componentChunkName":"component---src-templates-category-js","path":"/MSA/","result":{"data":{"site":{"siteMetadata":{"configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"분산락(Distribution Lock)이란? 분산락은 여러 프로세스 또는 스레드가 공유하는 리소스에 대한 동시 접근을 제어하기 위한 메커니즘입니다. 비관적락/낙관적락 게시글에서 다루었듯이 서비스 개발에서 동시성 문제를 처리하는 것은 중요한 문제이다. 동시성문제는 여러 프로세스 또는 쓰레드가 동일한 자원을 접근하며 경쟁(Race Condition)하는 상…","fields":{"slug":"/MSA/20230503-Redis를_통한_분산락으로_동시성_문제_제어하기/"},"frontmatter":{"date":"2023년 05월 03일","title":"Redis를 통한 분산락(Distribution Lock)으로 동시성 문제 제어하기","tags":["MSA","분산락","Distribution Lock","Redis","Lettuce를","Redisson"]}}},{"node":{"excerpt":"지난 게시글에서는 MSA에서 특정 컴포넌트에서 발생하는 장애가 전체로 전파되지 않도록 하는 서킷 브레이커 패턴에 대해 알아봤다. 그리고 자바진영에서 제공하는 서킷 브레이커 라이브러리는 Resilience4J와 Hystrix가 존재한다. 이번 게시글에서는 서킷 브레이터 라이브러리중 하나인 Reslience4J에 대해 알아보고자 한다. 서킷 브레이커 패턴에 …","fields":{"slug":"/MSA/20230428-Resilience4J로_SpringBoot에서_CircuitBreaker_사용해보기/"},"frontmatter":{"date":"2023년 04월 28일","title":"Resilience4J로 Spring Boot에서  Circuit Breaker 사용해보기","tags":["MSA","서킷 브레이커 패턴","Circuit Breaker","Resilience4J"]}}},{"node":{"excerpt":"최근에 여러 회사에 입사를 하여 근무를 하고 있는 우테코 크루들을 만나 이야기하던 중 그동안 몰랐던 새로운 키워드들을 많이 얻게 됐다. 앞으로 해당 키워드들을 하나씩 공부하며 정리를 하려한다. 이번 게시글에서는 얻은 키워드 중 하나인 서킷 브레이커 패턴에 대해 다뤄보겠다. MSA의 서비스(컴포넌트)간 장애 전파 문제 많은 기업들이 안정적인 서비스를 제공하…","fields":{"slug":"/MSA/20230426-서킷브레이커란/"},"frontmatter":{"date":"2023년 04월 26일","title":"서킷 브레이커 패턴(Circuit Breaker Pattern)이란?","tags":["MSA","서킷 브레이커 패턴","Circuit Breaker"]}}}]}},"pageContext":{"categoryRegex":"/^(/home/runner/work/Seongwon97.github.io/Seongwon97.github.io/content/posts/)(MSA/)([^/]*.md$)/"}},"staticQueryHashes":["1900723382","3911196313","4111100897"]}