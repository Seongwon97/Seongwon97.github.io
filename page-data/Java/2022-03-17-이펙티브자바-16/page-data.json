{"componentChunkName":"component---src-templates-blog-post-js","path":"/Java/2022-03-17-이펙티브자바-16/","result":{"data":{"site":{"siteMetadata":{"author":"Seongwon","comment":{"utterances":"Seongwon97/Seongwon97.github.io"},"sponsor":{"buyMeACoffeeId":"seongwon"}}},"markdownRemark":{"excerpt":"이 글은 Effective Java 3/E의 내용을 요약한 글입니다. 자세한 내용은 책을 참고하시기 바랍니다. 일반적으로 사용하는 접근자 제공 방법 다음과 같은 클래스는 필드에 위치한 데이터를 외부에서 직접 접근할 수 있어 캡슐화의 이점을 제공하지 못한다.\n그래서 우리는 일반적으로 필드를 private으로 변경 후 getter를 추가하여 사용합니다. 우리…","html":"<blockquote>\n<p>이 글은 Effective Java 3/E의 내용을 요약한 글입니다. 자세한 내용은 책을 참고하시기 바랍니다.</p>\n</blockquote>\n<h1 id=\"일반적으로-사용하는-접근자-제공-방법\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EB%B0%98%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%A0%91%EA%B7%BC%EC%9E%90-%EC%A0%9C%EA%B3%B5-%EB%B0%A9%EB%B2%95\" aria-label=\"일반적으로 사용하는 접근자 제공 방법 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일반적으로 사용하는 접근자 제공 방법</h1>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"java\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">class</span><span class=\"mtk4\"> </span><span class=\"mtk11\">Point</span><span class=\"mtk4\"> </span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">public</span><span class=\"mtk4\"> </span><span class=\"mtk9\">double</span><span class=\"mtk4\"> x</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">public</span><span class=\"mtk4\"> </span><span class=\"mtk9\">double</span><span class=\"mtk4\"> y</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>다음과 같은 클래스는 필드에 위치한 데이터를 외부에서 직접 접근할 수 있어 캡슐화의 이점을 제공하지 못한다.\n그래서 우리는 일반적으로 필드를 private으로 변경 후 getter를 추가하여 사용합니다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"java\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">class</span><span class=\"mtk4\"> </span><span class=\"mtk11\">Point</span><span class=\"mtk4\"> </span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">private</span><span class=\"mtk4\"> </span><span class=\"mtk9\">double</span><span class=\"mtk4\"> x</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">private</span><span class=\"mtk4\"> </span><span class=\"mtk9\">double</span><span class=\"mtk4\"> y</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">public</span><span class=\"mtk3\"> </span><span class=\"mtk9\">double</span><span class=\"mtk3\"> getX</span><span class=\"mtk1\">()</span><span class=\"mtk3\"> </span><span class=\"mtk1\">{ </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> x; }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">public</span><span class=\"mtk3\"> </span><span class=\"mtk9\">double</span><span class=\"mtk3\"> getY</span><span class=\"mtk1\">()</span><span class=\"mtk3\"> </span><span class=\"mtk1\">{ </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> y; }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">public</span><span class=\"mtk3\"> </span><span class=\"mtk11\">Point</span><span class=\"mtk3\"> setX</span><span class=\"mtk1\">(</span><span class=\"mtk9\">double</span><span class=\"mtk1\"> </span><span class=\"mtk4 mtki\">x</span><span class=\"mtk1\">)</span><span class=\"mtk3\"> </span><span class=\"mtk1\">{ </span><span class=\"mtk11\">this</span><span class=\"mtk1\">.</span><span class=\"mtk4\">x</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> x; }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">public</span><span class=\"mtk3\"> </span><span class=\"mtk11\">Point</span><span class=\"mtk3\"> setY</span><span class=\"mtk1\">(</span><span class=\"mtk9\">double</span><span class=\"mtk1\"> </span><span class=\"mtk4 mtki\">y</span><span class=\"mtk1\">)</span><span class=\"mtk3\"> </span><span class=\"mtk1\">{ </span><span class=\"mtk11\">this</span><span class=\"mtk1\">.</span><span class=\"mtk4\">y</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> y; }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>우리는 일반적으로 다음과 같은 방법을 사용하여 외부에서 내부 필드에 대한 직접적인 접근도 막아주고,\n접근자(getter,setter)를 제공하며 내부에 대한 접근을 할 수 있는 유연성을 제공합니다.</p>\n<h1 id=\"package-private-클래스와-private-중첩-클래스의-데이터-필드\" style=\"position:relative;\"><a href=\"#package-private-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%99%80-private-%EC%A4%91%EC%B2%A9-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%95%84%EB%93%9C\" aria-label=\"package private 클래스와 private 중첩 클래스의 데이터 필드 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>package-private 클래스와 private 중첩 클래스의 데이터 필드</h1>\n<ul>\n<li><strong>package-private 클래스와 private 중첩 클래스는 추강 개념만 올바르게 표현하면 데이터 필드를 노출하여도 문제가 없습니다.</strong></li>\n<li>선언면과 클라이언트 코드 면에서나 접근자 방식보다 깔끔하다.</li>\n<li>클라이언트 코드가 클래스 내부 표현에 묶이더라도 해당 패키지 안에서만 동작을 하여 문제가 없다.</li>\n<li>private 중첩 클래스의 경우, 해당 클래스를 포함하는 외부 클래스까지로 제한된다.</li>\n</ul>\n<h1 id=\"불변-필드의-노출\" style=\"position:relative;\"><a href=\"#%EB%B6%88%EB%B3%80-%ED%95%84%EB%93%9C%EC%9D%98-%EB%85%B8%EC%B6%9C\" aria-label=\"불변 필드의 노출 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>불변 필드의 노출</h1>\n<p>public 클래스의 필드가 불변이면 직접 노출될 때의 단점은 조금 줄어드나 좋지는 않은 방법이다.\n<strong>단점</strong></p>\n<ul>\n<li>API를 변경하지 않고 표현 방식을 바꿀 수 없다.</li>\n<li>필드를 읽을 때 부수 작업을 수행할 수 없다.</li>\n</ul>\n<h1 id=\"핵심-정리\" style=\"position:relative;\"><a href=\"#%ED%95%B5%EC%8B%AC-%EC%A0%95%EB%A6%AC\" aria-label=\"핵심 정리 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>핵심 정리</h1>\n<p>public 클래스는 절대 가변 필드를 직접 노출해서는 안 된다.\n불변 필드라면 노출해도 덜 위험하지만 완전히 안심할 수는 없다.\n하지만 package-private 클래스나 private 중첩 클래스에서는 종종 필드를 노출하는 편이 나을 때도 있다.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .one-dark-pro {\n    background-color: #282c34;\n    color: #abb2bf;\n  }\n  .one-dark-pro .mtki { font-style: italic; }\n  .one-dark-pro .mtk9 { color: #C678DD; }\n  .one-dark-pro .mtk4 { color: #E06C75; }\n  .one-dark-pro .mtk11 { color: #E5C07B; }\n  .one-dark-pro .mtk1 { color: #ABB2BF; }\n  .one-dark-pro .mtk3 { color: #61AFEF; }\n  .one-dark-pro .mtk8 { color: #56B6C2; }\n  .one-dark-pro .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li><a href=\"/Java/2022-03-17-%EC%9D%B4%ED%8E%99%ED%8B%B0%EB%B8%8C%EC%9E%90%EB%B0%94-16/#%EC%9D%BC%EB%B0%98%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%A0%91%EA%B7%BC%EC%9E%90-%EC%A0%9C%EA%B3%B5-%EB%B0%A9%EB%B2%95\">일반적으로 사용하는 접근자 제공 방법</a></li>\n<li><a href=\"/Java/2022-03-17-%EC%9D%B4%ED%8E%99%ED%8B%B0%EB%B8%8C%EC%9E%90%EB%B0%94-16/#package-private-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%99%80-private-%EC%A4%91%EC%B2%A9-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%95%84%EB%93%9C\">package-private 클래스와 private 중첩 클래스의 데이터 필드</a></li>\n<li><a href=\"/Java/2022-03-17-%EC%9D%B4%ED%8E%99%ED%8B%B0%EB%B8%8C%EC%9E%90%EB%B0%94-16/#%EB%B6%88%EB%B3%80-%ED%95%84%EB%93%9C%EC%9D%98-%EB%85%B8%EC%B6%9C\">불변 필드의 노출</a></li>\n<li><a href=\"/Java/2022-03-17-%EC%9D%B4%ED%8E%99%ED%8B%B0%EB%B8%8C%EC%9E%90%EB%B0%94-16/#%ED%95%B5%EC%8B%AC-%EC%A0%95%EB%A6%AC\">핵심 정리</a></li>\n</ul>","frontmatter":{"date":"2022년 03월 17일","title":"[Effective Java] Item16. public 클래스에서는 public 필드가 아닌 접근자 메서드를 사용하라","tags":["Java","Effective Java","접근 제어자"]}}},"pageContext":{"slug":"/Java/2022-03-17-이펙티브자바-16/","previous":{"fields":{"slug":"/Java/2022-03-17-이펙티브자바-17/"},"frontmatter":{"title":"[Effective Java] Item17. 변경 가능성을 최소화하라"}},"next":{"fields":{"slug":"/Woowacourse/2022-03-21-우테코-레벨1-블랙잭-회고/"},"frontmatter":{"title":"[우아한테크코스] 레벨1 블랙잭 미션 회고 (3월 8일 ~ 21일)"}}}},"staticQueryHashes":["3911196313","4111100897"]}