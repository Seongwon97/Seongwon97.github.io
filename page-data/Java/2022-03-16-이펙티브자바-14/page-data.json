{"componentChunkName":"component---src-templates-blog-post-js","path":"/Java/2022-03-16-이펙티브자바-14/","result":{"data":{"site":{"siteMetadata":{"author":"Seongwon","comment":{"utterances":"Seongwon97/Seongwon97.github.io"},"sponsor":{"buyMeACoffeeId":"seongwon"}}},"markdownRemark":{"excerpt":"이 글은 Effective Java 3/E의 내용을 요약한 글입니다. 자세한 내용은 책을 참고하시기 바랍니다. Comparable의 compareTo 메서드 compareTo는 Object의 메서드가 아닙니다. Comparable은 equals와 유사하며, 동치성 비교 뿐만 아니라 순서 비교까지 한다는 특징과 제너릭하다는 특징이 있습니다. 자바 플랫폼 라…","html":"<blockquote>\n<p>이 글은 Effective Java 3/E의 내용을 요약한 글입니다. 자세한 내용은 책을 참고하시기 바랍니다.</p>\n</blockquote>\n<h1 id=\"comparable의-compareto-메서드\" style=\"position:relative;\"><a href=\"#comparable%EC%9D%98-compareto-%EB%A9%94%EC%84%9C%EB%93%9C\" aria-label=\"comparable의 compareto 메서드 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Comparable의 compareTo 메서드</h1>\n<ul>\n<li><code>compareTo</code>는 Object의 메서드가 아닙니다.</li>\n<li><code>Comparable</code>은 <code>equals</code>와 유사하며, 동치성 비교 뿐만 아니라 순서 비교까지 한다는 특징과 제너릭하다는 특징이 있습니다.</li>\n<li>자바 플랫폼 라이브러리의 모든 값 클래스와 열거 타입들은 <code>Comparable</code>을 구현하고 있다.</li>\n<li>만약 순서가 명확한 클래스를 작성하게 된다면 <code>Comparable</code> 인터페이스를 구현하여 정렬, 비교 등의 작업을 할 수 있습니다.</li>\n</ul>\n<h1 id=\"compareto-메서드의-일반-규약\" style=\"position:relative;\"><a href=\"#compareto-%EB%A9%94%EC%84%9C%EB%93%9C%EC%9D%98-%EC%9D%BC%EB%B0%98-%EA%B7%9C%EC%95%BD\" aria-label=\"compareto 메서드의 일반 규약 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>compareTo 메서드의 일반 규약</h1>\n<p>이 객체와 주어진 객체의 순서를 비교한다. 이 객체가 주어진 객체보다 작으면 음의 정수를, 같으면 0을, 크면 양의 정수로 반환한다. 이 객체와 비교할 수 없는 타입의 객체가 주어지면 ClassCastException을 던진다.</p>\n<p>다음 설명에서 sgn(표현식) 표기는 수학에서 말하는 부호 함수(signum function)를 뜻하며, 표현식의 값이 음수, 0, 양수일 때 -1, 0, 1을 반환하도록 정의했다.</p>\n<ul>\n<li>Comparable을 구현한 클래스는 모든 x, y에 대해 <code>sgn(x.compartTo(y)) == -sgn.(y.compareTo(x))</code>여야 한다(따라서 <code>x.compareTo(y)는 y.compareTo(x)</code>가 예외를 던질때에 한해 예외를 던져야 한다).</li>\n<li>Comparable을 구현한 클래스는 추이성을 보장해야 한다. 즉, <code>(x.compareTo(y) > 0 &#x26;&#x26; y.compareTo(z) > 0)</code>이면 <code>x.compareTo(z) > 0</code>이다.</li>\n<li>Comparable을 구현한 클래스는 모든 z에 대해 <code>x.compareTo(y) == 0이면 sgn(x.compareTo(z)) == sgn(y.compareTo(z))</code>다.</li>\n<li>이번 권고가 필수는 아니지만 꼭 지키는 게 좋다. <code>(x.compareTo(y) == 0) == (x.equals(y))</code>여야 한다. <code>Comparable</code>을 구현하고 이 권고를 지키지 않는 모든 클래스는 그 사실을 명시해야 한다. 다음과 같이 명시하면 적당할 것이다.</li>\n</ul>\n<p>\"⚠️주의 : 이 클래스의 순서는 equals 메서드와 일관되지 않다.\"</p>\n<h2 id=\"compareto-규약-정리\" style=\"position:relative;\"><a href=\"#compareto-%EA%B7%9C%EC%95%BD-%EC%A0%95%EB%A6%AC\" aria-label=\"compareto 규약 정리 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CompareTo 규약 정리</h2>\n<ul>\n<li><code>compareTo</code>는 타임이 다른 객체를 신경쓰지 않아도 되어 타입이 다른 객체가 주어진다면 <code>ClassCastException</code>을 던져도 된다.</li>\n<li><code>compareTo</code> 규약을 지키지 못한다면 비교를 활용하는 정렬된 컬렉션인 <code>TreeSet</code>과 <code>TreeMap</code>, <code>Collecitons</code>, <code>Arrays</code>와 어울리지 못합니다.</li>\n<li><code>Comparable</code>을 구현한 클래스를 확장해 값 컴포넌트를 추가하고 싶다면 확장하는 대신 독립된 클래스를 만들고, 해당 클래스에는 원래 클래스의 인스턴스를 가르키는 필드를 두고, 내부 인스턴스를 반환하는 뷰 메서드를 제공해야한다.</li>\n</ul>\n<p>위에 보인 compareTo의 규약들의 설명은 다음과 같다.</p>\n<ul>\n<li>첫번째 규약은 두 객체의 참조 순서를 바꿔 비교해도 예상한 결과가 나와야 한다는 뜻이다.</li>\n<li>두번째 규약은 첫 번째가 두 번째보다 크고 두 번째가 세 번째보다 크면, 첫 번째는 세 번째보다 커야 한다는 뜻이다.</li>\n<li>세번째 규약은 크기가 같은 객체들끼리는 어떤 객체와 비교하더라도 항상 같아야 한다는 뜻이다.</li>\n<li>\n<p>네번째 규약은 <code>compareTo</code>메서드로 수행한 동치성 테스트 결과가 <code>equals</code>와 같아야 한다.</p>\n<ul>\n<li><code>compareTo</code>와 <code>equals</code>의 결과가 일치하지 않아도 동작은 되지만 정렬된 컬렉션에 넣으면 엇박자를 낼 것이다.</li>\n<li>이유는, 기존에 컬렉션들은 <code>equals</code>규약을 따르지만 정렬된 컬렉션들은 <code>equals</code>가 아닌 <code>compareTo</code>를 사용하기 떄문이다.</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"compareto-작성-요령\" style=\"position:relative;\"><a href=\"#compareto-%EC%9E%91%EC%84%B1-%EC%9A%94%EB%A0%B9\" aria-label=\"compareto 작성 요령 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>compareTo 작성 요령</h1>\n<ul>\n<li><code>compareTo</code>의 작성요령은 <code>equals</code>와 유사하다.</li>\n<li>\n<p><code>Comparable</code>은 타입을 인수로 받는 제너릭 인터페이스라 <code>compareTo</code>의 인수 타입은 컴파일 타임에 정해진다.</p>\n<ul>\n<li>입력 인수 타입을 확인하거나 형 변환이 불필요하다.</li>\n<li><code>null</code>을 인수로 넣어 호출하면 <code>NullPointException</code>을 던져야 한다.</li>\n</ul>\n</li>\n<li>\n<p><code>compareTo</code>는 각 필드가 동치인지 비교하는 것이 아닌 순서를 비교하는 것이라 참조 필드를 비교하려면 <code>compareTo</code>를 재귀적으로 호출한다.</p>\n<ul>\n<li><code>Comparable</code>을 구현하지 않은 필드나 표준이 아닌 순서로 비교할 경우에는 <code>Comparator</code>를 사용한다.</li>\n</ul>\n</li>\n<li><code>compareTo</code>메서드에서 관계 연산자 <code>&#x3C;</code> 와 <code>></code>를 사용하는 방식은 거추장스럽고 오류를 유발하여 추천하지 않는다.</li>\n<li>필드의 비교는 가장 핵심적인 필드부터 비교해가며 중간에 결과가 0(==)이 아니면 결과를 바로 반환하다.</li>\n</ul>\n<h1 id=\"비교자-생성-메서드-활용\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EA%B5%90%EC%9E%90-%EC%83%9D%EC%84%B1-%EB%A9%94%EC%84%9C%EB%93%9C-%ED%99%9C%EC%9A%A9\" aria-label=\"비교자 생성 메서드 활용 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비교자 생성 메서드 활용</h1>\n<p>자바 8에서는 <code>Comparator</code> 인터페이스가 <code>비교자 생성 메서드(comparator construction method)</code>와 팀을 꾸려 메서드 연쇄 방식으로 비교자를 생성할 수 있게 되었다.</p>\n<p>비교자 생성 메서드를 사용한 예시는 다음과 같습니다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"java\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">private</span><span class=\"mtk4\"> </span><span class=\"mtk9\">static</span><span class=\"mtk4\"> </span><span class=\"mtk9\">final</span><span class=\"mtk4\"> </span><span class=\"mtk11\">Comparator</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">PhoneNumber</span><span class=\"mtk1\">&gt;</span><span class=\"mtk4\"> COMPARATOR </span><span class=\"mtk8\">=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk3\">comparingInt</span><span class=\"mtk4\">((</span><span class=\"mtk11\">PhoneNumber</span><span class=\"mtk4\"> pn) p </span><span class=\"mtk9\">-&gt;</span><span class=\"mtk4\"> </span><span class=\"mtk11\">pn</span><span class=\"mtk1\">.</span><span class=\"mtk4\">areaCode)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk1\">.</span><span class=\"mtk3\">thenComparingInt</span><span class=\"mtk1\">(pn </span><span class=\"mtk9\">-&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pn</span><span class=\"mtk1\">.</span><span class=\"mtk4\">prefix</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk1\">.</span><span class=\"mtk3\">thenComparingInt</span><span class=\"mtk1\">(pn </span><span class=\"mtk9\">-&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pn</span><span class=\"mtk1\">.</span><span class=\"mtk4\">lineNum</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">public</span><span class=\"mtk4\"> </span><span class=\"mtk9\">int</span><span class=\"mtk4\"> </span><span class=\"mtk3\">compareTo</span><span class=\"mtk4\">(</span><span class=\"mtk11\">PhoneNumber</span><span class=\"mtk4\"> pn) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">return</span><span class=\"mtk4\"> </span><span class=\"mtk11\">COMPARATOR</span><span class=\"mtk1\">.</span><span class=\"mtk3\">compare</span><span class=\"mtk1\">(</span><span class=\"mtk11\">this</span><span class=\"mtk1\">, pn);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">}</span></span></span></code></pre>\n<ul>\n<li>\n<p><code>comparingInt</code>는 객체 타입 참조를 int타입 키에 매핑하는 키 추출 함수를 인수로 받아 해당 키를 기준으로 순서를 정하는 비교자를 반환하는 정적 메서드이다.</p>\n<ul>\n<li>예제에서는 <code>((PhoneNumber pn) p -> pn.areaCode)</code>와 같은 람다를 인수로 받고 <code>Comparator&#x3C;PhoneNumber></code>를 반환한다.</li>\n</ul>\n</li>\n<li>\n<p>자바의 타입 추론 능력은 강력하지 않기에 <code>comparing((PhoneNumber pn) p> pn.areaCode)</code>의 <code>(PhoneNumber pn)</code>와 같이 타입을 알려주는 것이 좋다.</p>\n<ul>\n<li>두번째 부터는 하지 않아도 된다.</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"주의-사항\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9D%98-%EC%82%AC%ED%95%AD\" aria-label=\"주의 사항 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주의 사항</h1>\n<p>값의 차이를 기준으로 값을 비교하는 <code>compareTo</code>와 <code>compare</code>메서드는 사용하면 안되는 방식이다.\n이는 정수 오버플로우를 일으키거나 부동소수점 게산 방식에 따른 오류를 낼 수 있다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"java\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk5 mtki\">// 값의 차를 기준으로 값을 비교하는 방식 (사용하면 안되는 예)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">public</span><span class=\"mtk4\"> </span><span class=\"mtk9\">class</span><span class=\"mtk4\"> </span><span class=\"mtk11\">HashCodeOrderComparator</span><span class=\"mtk4\"> </span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">static</span><span class=\"mtk4\"> </span><span class=\"mtk11\">Comparator</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">Object</span><span class=\"mtk1\">&gt;</span><span class=\"mtk4\"> hashCodeOrder </span><span class=\"mtk8\">=</span><span class=\"mtk4\"> </span><span class=\"mtk9\">new</span><span class=\"mtk4\"> </span><span class=\"mtk11\">Comparator</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">Object</span><span class=\"mtk1\">&gt;</span><span class=\"mtk4\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk1\">@</span><span class=\"mtk11\">Override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk9\">public</span><span class=\"mtk3\"> </span><span class=\"mtk9\">int</span><span class=\"mtk3\"> compare</span><span class=\"mtk1\">(</span><span class=\"mtk11\">Object</span><span class=\"mtk1\"> </span><span class=\"mtk4 mtki\">o1</span><span class=\"mtk1\">, </span><span class=\"mtk11\">Object</span><span class=\"mtk1\"> </span><span class=\"mtk4 mtki\">o2</span><span class=\"mtk1\">)</span><span class=\"mtk3\"> </span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">o1</span><span class=\"mtk1\">.</span><span class=\"mtk3\">hashCode</span><span class=\"mtk1\">() </span><span class=\"mtk8\">-</span><span class=\"mtk1\"> </span><span class=\"mtk11\">o2</span><span class=\"mtk1\">.</span><span class=\"mtk3\">hashCode</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    }</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>그 대신 아래의 두가지 방법을 활용하자</p>\n<h3 id=\"정적-compare-메서드를-활용한-비교자\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%A0%81-compare-%EB%A9%94%EC%84%9C%EB%93%9C%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%EB%B9%84%EA%B5%90%EC%9E%90\" aria-label=\"정적 compare 메서드를 활용한 비교자 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정적 compare 메서드를 활용한 비교자</h3>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"java\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">class</span><span class=\"mtk4\"> </span><span class=\"mtk11\">HashCodeOrder</span><span class=\"mtk4\"> </span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">static</span><span class=\"mtk4\"> </span><span class=\"mtk11\">Comparator</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">Object</span><span class=\"mtk1\">&gt;</span><span class=\"mtk4\"> staticHashCodeOrder </span><span class=\"mtk8\">=</span><span class=\"mtk4\"> </span><span class=\"mtk9\">new</span><span class=\"mtk4\"> </span><span class=\"mtk11\">Comparator</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">Object</span><span class=\"mtk1\">&gt;</span><span class=\"mtk4\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk1\">@</span><span class=\"mtk11\">Override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk9\">public</span><span class=\"mtk3\"> </span><span class=\"mtk9\">int</span><span class=\"mtk3\"> compare</span><span class=\"mtk1\">(</span><span class=\"mtk11\">Object</span><span class=\"mtk1\"> </span><span class=\"mtk4 mtki\">o1</span><span class=\"mtk1\">, </span><span class=\"mtk11\">Object</span><span class=\"mtk1\"> </span><span class=\"mtk4 mtki\">o2</span><span class=\"mtk1\">)</span><span class=\"mtk3\"> </span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Integer</span><span class=\"mtk1\">.</span><span class=\"mtk3\">compare</span><span class=\"mtk1\">(</span><span class=\"mtk11\">o1</span><span class=\"mtk1\">.</span><span class=\"mtk3\">hashCode</span><span class=\"mtk1\">(), </span><span class=\"mtk11\">o2</span><span class=\"mtk1\">.</span><span class=\"mtk3\">hashCode</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    }</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"비교자-생성-메서드를-활용한-비교자\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EA%B5%90%EC%9E%90-%EC%83%9D%EC%84%B1-%EB%A9%94%EC%84%9C%EB%93%9C%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%EB%B9%84%EA%B5%90%EC%9E%90\" aria-label=\"비교자 생성 메서드를 활용한 비교자 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비교자 생성 메서드를 활용한 비교자</h3>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"java\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">class</span><span class=\"mtk4\"> </span><span class=\"mtk11\">HashCodeOrder</span><span class=\"mtk4\"> </span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">static</span><span class=\"mtk4\"> </span><span class=\"mtk11\">Comparator</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">Object</span><span class=\"mtk1\">&gt;</span><span class=\"mtk4\"> comparatorHashCodeOrder </span><span class=\"mtk8\">=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk11\">Comparator</span><span class=\"mtk1\">.</span><span class=\"mtk3\">comparingInt</span><span class=\"mtk1\">(o </span><span class=\"mtk9\">-&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">o</span><span class=\"mtk1\">.</span><span class=\"mtk3\">hashCode</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h1 id=\"핵심-정리\" style=\"position:relative;\"><a href=\"#%ED%95%B5%EC%8B%AC-%EC%A0%95%EB%A6%AC\" aria-label=\"핵심 정리 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>핵심 정리</h1>\n<p>순서를 고려해야 하는 값 클래스를 작성한다면 꼭 <code>Comparable</code> 인터페이스를 구현하여,\n그 인스턴스들을 쉽게 정렬하고, 검색하고, 비교 기능을 제공하는 컬렉션과 어우러지도록 해야 한다.\n<code>compareTo</code> 메서드에서 필드의 값을 비교할 때 <code>&#x3C;</code> 와 <code>></code> 연산자는 쓰지 말아야 한다.\n그 대신 박싱된 기본 타입 클래스에서 제공하는 정적 <code>compare</code> 메서드나 <code>Comparator</code> 인터페이스가 제공하는 비교자 생성 메서드를 사용하자.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .one-dark-pro {\n    background-color: #282c34;\n    color: #abb2bf;\n  }\n  .one-dark-pro .mtki { font-style: italic; }\n  .one-dark-pro .mtk9 { color: #C678DD; }\n  .one-dark-pro .mtk4 { color: #E06C75; }\n  .one-dark-pro .mtk11 { color: #E5C07B; }\n  .one-dark-pro .mtk1 { color: #ABB2BF; }\n  .one-dark-pro .mtk8 { color: #56B6C2; }\n  .one-dark-pro .mtk3 { color: #61AFEF; }\n  .one-dark-pro .mtk5 { color: #7F848E; }\n  .one-dark-pro .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li><a href=\"/Java/2022-03-16-%EC%9D%B4%ED%8E%99%ED%8B%B0%EB%B8%8C%EC%9E%90%EB%B0%94-14/#comparable%EC%9D%98-compareto-%EB%A9%94%EC%84%9C%EB%93%9C\">Comparable의 compareTo 메서드</a></li>\n<li>\n<p><a href=\"/Java/2022-03-16-%EC%9D%B4%ED%8E%99%ED%8B%B0%EB%B8%8C%EC%9E%90%EB%B0%94-14/#compareto-%EB%A9%94%EC%84%9C%EB%93%9C%EC%9D%98-%EC%9D%BC%EB%B0%98-%EA%B7%9C%EC%95%BD\">compareTo 메서드의 일반 규약</a></p>\n<ul>\n<li><a href=\"/Java/2022-03-16-%EC%9D%B4%ED%8E%99%ED%8B%B0%EB%B8%8C%EC%9E%90%EB%B0%94-14/#compareto-%EA%B7%9C%EC%95%BD-%EC%A0%95%EB%A6%AC\">CompareTo 규약 정리</a></li>\n</ul>\n</li>\n<li><a href=\"/Java/2022-03-16-%EC%9D%B4%ED%8E%99%ED%8B%B0%EB%B8%8C%EC%9E%90%EB%B0%94-14/#compareto-%EC%9E%91%EC%84%B1-%EC%9A%94%EB%A0%B9\">compareTo 작성 요령</a></li>\n<li><a href=\"/Java/2022-03-16-%EC%9D%B4%ED%8E%99%ED%8B%B0%EB%B8%8C%EC%9E%90%EB%B0%94-14/#%EB%B9%84%EA%B5%90%EC%9E%90-%EC%83%9D%EC%84%B1-%EB%A9%94%EC%84%9C%EB%93%9C-%ED%99%9C%EC%9A%A9\">비교자 생성 메서드 활용</a></li>\n<li>\n<p><a href=\"/Java/2022-03-16-%EC%9D%B4%ED%8E%99%ED%8B%B0%EB%B8%8C%EC%9E%90%EB%B0%94-14/#%EC%A3%BC%EC%9D%98-%EC%82%AC%ED%95%AD\">주의 사항</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/Java/2022-03-16-%EC%9D%B4%ED%8E%99%ED%8B%B0%EB%B8%8C%EC%9E%90%EB%B0%94-14/#%EC%A0%95%EC%A0%81-compare-%EB%A9%94%EC%84%9C%EB%93%9C%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%EB%B9%84%EA%B5%90%EC%9E%90\">정적 compare 메서드를 활용한 비교자</a></li>\n<li><a href=\"/Java/2022-03-16-%EC%9D%B4%ED%8E%99%ED%8B%B0%EB%B8%8C%EC%9E%90%EB%B0%94-14/#%EB%B9%84%EA%B5%90%EC%9E%90-%EC%83%9D%EC%84%B1-%EB%A9%94%EC%84%9C%EB%93%9C%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%EB%B9%84%EA%B5%90%EC%9E%90\">비교자 생성 메서드를 활용한 비교자</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/Java/2022-03-16-%EC%9D%B4%ED%8E%99%ED%8B%B0%EB%B8%8C%EC%9E%90%EB%B0%94-14/#%ED%95%B5%EC%8B%AC-%EC%A0%95%EB%A6%AC\">핵심 정리</a></li>\n</ul>","frontmatter":{"date":"2022년 03월 16일","title":"[Effective Java] Item14. Comparable을 구현할지 고려하라","tags":["Java","Effective Java","Comparable"]}}},"pageContext":{"slug":"/Java/2022-03-16-이펙티브자바-14/","previous":{"fields":{"slug":"/Java/2022-03-16-이펙티브자바-15/"},"frontmatter":{"title":"[Effective Java] Item15. 클래스와 멤버의 접근 권한을 최소화하라"}},"next":{"fields":{"slug":"/Java/2022-03-17-이펙티브자바-17/"},"frontmatter":{"title":"[Effective Java] Item17. 변경 가능성을 최소화하라"}}}},"staticQueryHashes":["3911196313","4111100897"]}