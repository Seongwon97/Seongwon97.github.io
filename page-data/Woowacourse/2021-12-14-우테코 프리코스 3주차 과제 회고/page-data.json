{"componentChunkName":"component---src-templates-blog-post-js","path":"/Woowacourse/2021-12-14-우테코 프리코스 3주차 과제 회고/","result":{"data":{"site":{"siteMetadata":{"author":"Seongwon","comment":{"utterances":"Seongwon97/Seongwon97.github.io"},"sponsor":{"buyMeACoffeeId":"seongwon"}}},"markdownRemark":{"excerpt":"3주차 과제를 들어가기 앞서 이번 과제는 마지막 미션인 만큼 시작하기 앞서 2주차 피드백과 2주차 과제에서 작성한 나의 코드 및 다른 지원자들의 코드 리뷰를 하는데 많은 시간을 투자하였습니다. 해당 리뷰에 대한 정리 자료는 다음 링크를 통해 확인하실 수 있습니다.\n2주차 피드백 정리 2주차 과제 리뷰를 하며 가장 크게 놀랐던 점은 다른 사람의 코드 리뷰를…","html":"<h1 id=\"3주차-과제를-들어가기-앞서\" style=\"position:relative;\"><a href=\"#3%EC%A3%BC%EC%B0%A8-%EA%B3%BC%EC%A0%9C%EB%A5%BC-%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0-%EC%95%9E%EC%84%9C\" aria-label=\"3주차 과제를 들어가기 앞서 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3주차 과제를 들어가기 앞서</h1>\n<p>이번 과제는 마지막 미션인 만큼 시작하기 앞서 2주차 피드백과 2주차 과제에서 작성한 나의 코드 및 다른 지원자들의 코드 리뷰를 하는데 많은 시간을 투자하였습니다.</p>\n<blockquote>\n<p>해당 리뷰에 대한 정리 자료는 다음 링크를 통해 확인하실 수 있습니다.\n<a href=\"https://velog.io/@seongwon97/%EC%9A%B0%ED%85%8C%EC%BD%94-%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4-2%EC%A3%BC%EC%B0%A8-%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4-%EB%A6%AC%EB%B7%B0-%EC%A0%95%EB%A6%AC\">2주차 피드백 정리</a></p>\n</blockquote>\n<p>2주차 과제 리뷰를 하며 가장 크게 놀랐던 점은 다른 사람의 코드 리뷰를 하며 있었습니다. 같은 과제를 받아서 수행하였음에도 불구하고 프리코스 미션에 MVC패턴, 싱글톤, 일급 컬렉션 등 많은 기술들을 적용하며 과제를 진행하였다는 것에 놀라며 나도 3주차 과제의 진행에는 여러 기술들을 사용해보자!는 다짐을 하며 진행하였습니다.</p>\n<hr>\n<h1 id=\"우테코-프리코스-3주차-과제마지막\" style=\"position:relative;\"><a href=\"#%EC%9A%B0%ED%85%8C%EC%BD%94-%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4-3%EC%A3%BC%EC%B0%A8-%EA%B3%BC%EC%A0%9C%EB%A7%88%EC%A7%80%EB%A7%89\" aria-label=\"우테코 프리코스 3주차 과제마지막 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>우테코 프리코스 3주차 과제(마지막...!)</h1>\n<h2 id=\"-미션-간단-설명\" style=\"position:relative;\"><a href=\"#-%EB%AF%B8%EC%85%98-%EA%B0%84%EB%8B%A8-%EC%84%A4%EB%AA%85\" aria-label=\" 미션 간단 설명 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚀 미션 간단 설명</h2>\n<p>이번 미션은 우리가 일상생활에서 쉽게 볼 수 있는 자판기를 코드로 구현하는 미션입니다.\n<br>미션 코드의 진행 순서는 다음과 같습니다.</p>\n<ol>\n<li>자판기가 보유한 금액을 입력합니다.</li>\n<li>1에서 입력된 금액으로 자판기는 랜덤하게 동전을 생성한다. (보유한 동전 출력)</li>\n<li>자판기에서 판매할 상퓸 리스트를 입력합니다.</li>\n<li>음료를 구매할 투입 금액을 입력합니다.</li>\n<li>구매할 음료를 입력한다.\n(위의 4,5번을 잔돈이 상품의 최저 가격보다 적거나, 모든 상품이 소진 된 경우까지 반복한다.)</li>\n<li>잔돈을 반환한다. (잔돈이 부족한 경우 반환할 수 있는 금액만 반환한다.)</li>\n</ol>\n<h2 id=\"-제약사항\" style=\"position:relative;\"><a href=\"#-%EC%A0%9C%EC%95%BD%EC%82%AC%ED%95%AD\" aria-label=\" 제약사항 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔒 제약사항</h2>\n<h3 id=\"1-coin\" style=\"position:relative;\"><a href=\"#1-coin\" aria-label=\"1 coin permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Coin</h3>\n<ol>\n<li>다음 Coin클래스를 활용해야 한다.</li>\n</ol>\n<h3 id=\"2-입력\" style=\"position:relative;\"><a href=\"#2-%EC%9E%85%EB%A0%A5\" aria-label=\"2 입력 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 입력</h3>\n<ol>\n<li>상품명, 가격, 수량은 쉼표(<code>,</code>)로 구분하며 개별 상품은 대괄호(<code>[]</code>)로 묶어 세미콜론(<code>:</code>)으로 구분한다.</li>\n<li>옳바르지 않는 입력이 들어오면 <code>IllegalArgumentException</code>를 발생 시키고 \"[ERROR]\"로 시작하는 에러 메시지 출력 후 재입력을 받는다.</li>\n<li>사용자의 입력은 <code>camp.nextstep.edu.missionutils.Console</code>의 <code>readLine()</code>을 활용한다.</li>\n<li>입력 받아야 할 값 list</li>\n<li>자판기가 보유한 금액</li>\n<li>상품 list</li>\n<li>투입금액</li>\n<li>구입할 상품명</li>\n</ol>\n<h3 id=\"3-출력\" style=\"position:relative;\"><a href=\"#3-%EC%B6%9C%EB%A0%A5\" aria-label=\"3 출력 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 출력</h3>\n<ul>\n<li>잔돈은 반환된 동전만 출력한다.</li>\n<li>예외 상황 발생 시 <code>[ERROR]</code>로 시작하는 에러 문구를 출력해야한다.</li>\n</ul>\n<h3 id=\"4-그-외의-제약사항\" style=\"position:relative;\"><a href=\"#4-%EA%B7%B8-%EC%99%B8%EC%9D%98-%EC%A0%9C%EC%95%BD%EC%82%AC%ED%95%AD\" aria-label=\"4 그 외의 제약사항 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 그 외의 제약사항</h3>\n<ul>\n<li>JDK 8 버전 사용</li>\n<li>Indent depth를 2까지만 허용</li>\n<li>3항 연산자 사용 금지</li>\n<li>메서드는 최대한 한가지 기능만!</li>\n<li>메서드의 길이가 15라인을 넘지 않도록 구현</li>\n<li>Else 사용 금지! -> if절에서 return 하는 방식으로 구현하도록!</li>\n<li>Random, Scanner API대신 <code>camp.nextstep.edu.missionutils</code>에서 제공하는 <code>Randoms</code>, <code>Console</code> API를 활용!</li>\n<li>src/test/java 디렉터리의 ApplicationTest에 있는 모든 테스트 케이스가 성공해야 한다.</li>\n</ul>\n<br>\n<h1 id=\"-프리코스-3주차에서-배운점\" style=\"position:relative;\"><a href=\"#-%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4-3%EC%A3%BC%EC%B0%A8%EC%97%90%EC%84%9C-%EB%B0%B0%EC%9A%B4%EC%A0%90\" aria-label=\" 프리코스 3주차에서 배운점 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎓 프리코스 3주차에서 배운점</h1>\n<h2 id=\"1-첫째도-mvc-둘째도-mvc-셋째도-mvc\" style=\"position:relative;\"><a href=\"#1-%EC%B2%AB%EC%A7%B8%EB%8F%84-mvc-%EB%91%98%EC%A7%B8%EB%8F%84-mvc-%EC%85%8B%EC%A7%B8%EB%8F%84-mvc\" aria-label=\"1 첫째도 mvc 둘째도 mvc 셋째도 mvc permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 첫째도 MVC, 둘째도 MVC, 셋째도 MVC!!!!!</h2>\n<p>이번 과제를 진행하며는 다른 것 보다도 MVC를 익히고 적용시키자는 다짐을 하며 과제를 하였습니다.</p>\n<p>MVC패턴은 기존에는 스프링 프레임워크를 학습하며 적용을 하고는 하였는데 기존에는 강의를 들으며 따라서 학습을 할 뿐이지 혼자서 MVC패턴을 구현해본 적이 없었습니다. 그래서 그런가 MVC패턴의 전반적인 개념은 알고 있어도 직접 구현을 하려니까 손이 쉽게 움직이지 않았습니다.</p>\n<p>그래서 저는 다른 사람들의 2주차 코드리뷰, MVC테코톡 영상들, 구글링을 하며 MVC의 개념과 형태를 익히며 정리 자료를 만들었습니다. 그리고 테코톡 영상들을 찾아보며 2년 전에는 <a href=\"https://www.youtube.com/watch?v=uoVNJkyXX0I\">해리, 션님</a> 이 강의를 하고 작년에는 <a href=\"https://www.youtube.com/watch?v=es1ckjHOzTI\">범블비님</a> , 올해는 <a href=\"https://www.youtube.com/watch?v=ogaXW6KPc8I\">제리님</a> 이 MVC영상을 찍을 정도로 MVC패턴은 그만큼 중요하다는 것을 느끼며 더욱 열심히 공부를 하고 이번 마지막 과제에서 가장 많은 신경을 쓴 것 같습니다.</p>\n<blockquote>\n<p>MVC 정리자료 링크 : <a href=\"https://velog.io/@seongwon97/MVC-%ED%8C%A8%ED%84%B4%EC%9D%B4%EB%9E%80\">MVC패턴이란?</a></p>\n</blockquote>\n<p>MVC 패턴은 들어가기 앞서 학습을 하며 전반적인 이론 정리를 하고, 다른 코드들을 많이 봤음에도 불구하고 코드 작성은 쉽지 않았습니다.</p>\n<p>패턴을 적용하다보니 <strong>해당 기능은 Model로 가야하나 Controller로 가야하나..?</strong>하는 고민들을 수없이 많이 하다보니 기존에 빠르게 구현할 수 있었던 코드들도 작성하는데 엄청난 시간이 걸렸던 것 같습니다..😂😂</p>\n<p>그렇게 과제를 진행하다보니 요구사항 정리부터 과제 완료까지 대략 12시간이라는 시간이 걸렸던 것 같습니다..다음주 토요일에 예정되어있는 최종 시험은 5시간만 주어지는데 말이죠😥😥</p>\n<p>처음 작성한 코드의 구조는 아래의 사진과 같습니다.</p>\n<p><img src=\"https://images.velog.io/images/seongwon97/post/c426b3ab-ffac-4a20-9356-53319304d2c8/image.png\"></p>\n<p>가장 기본적인 구조로 Service, Repository없이 Model, View, Controller로 코드를 작성하다보니 모든 비즈니스 로직은 Model에 위치하여 Model이 하는 작업의 양이 매우 많이 있었고 코드들이 길어지다보니 코드의 가독성 또한 좋지 못한 것을 느낄 수 있었습니다.</p>\n<p>그래서 저는 <a href=\"https://www.youtube.com/watch?v=uoVNJkyXX0I\">해리, 션님의 테코톡 영상</a> 에서 션님이 잠깐동안 언급하였던 Service 레이어를 생성하며 코드의 작업을 분배고자 하였습니다. 처음에는 기존 코드의 리펙토링을 시도하였지만 코드의 결합도가 너무 높아서 리펙토링을 하기 힘들었습니다.. MVC패턴의 가장 큰 장점이 <strong>코드의 독립성</strong>과 <strong>코드의 가독성, 재사용성</strong>인데 처음 적용하였던 MVC 적용 코드는 모든 장점을 놓친 잘못된 코드라는 것을 알게 되었습니다😥 (제가 처음 작성한 MVC라 코드의 분리를 잘 못한 것 같습니다..)</p>\n<p>그래서 저는 새로운 <code>branch</code>를 다시 생성하여 처음부터 model, view, controller, service, repository로 나누어 개발을 진행했습니다.</p>\n<ul>\n<li><strong>Model</strong>에는 사용될 class</li>\n<li><strong>View</strong>에는 input, output과 관련된 UI관련 코드들</li>\n<li><strong>Controller</strong>에는 View와 Service를 연결시켜서 Main함수에서 바로 호출하여 프로그램을 실행 시킬 수 있도록 하는 코드들</li>\n<li><strong>service</strong>에는 전반적인 비즈니스 로직들</li>\n<li><strong>repository</strong>에서는 원래 Spring프레임워크에서는 DB의 데이터를 읽고 쓰는 만큼 실제 사용할 객체를 생성</li>\n</ul>\n<p>위와 같은 방법으로 파일을 생성하며 프로그래밍을 하다보니 아래와 같은 파일 구조가 나왔습니다.</p>\n<p><img src=\"https://images.velog.io/images/seongwon97/post/38e72aeb-fb61-4fe0-8a28-09b8bf5af1ec/image.png\"></p>\n<p>다시 작성한 코드들는 비즈니스 Model(domain)에서 분리하고 Service에 생성을 하다보니 MVC만을 사용한 코드들보다 확실히 코드의 가독성이 올라가고 재사용성이 높아진 것 같았습니다.</p>\n<p>특히 비즈니스 코드를 분리하다보니 리펙토링을 하면서도 별 다른 문제가 발생하지 않는 것을 확인할 수 있었습니다.</p>\n<h2 id=\"2-싱글톤-패턴-적용\" style=\"position:relative;\"><a href=\"#2-%EC%8B%B1%EA%B8%80%ED%86%A4-%ED%8C%A8%ED%84%B4-%EC%A0%81%EC%9A%A9\" aria-label=\"2 싱글톤 패턴 적용 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 싱글톤 패턴 적용</h2>\n<p>싱글톤 패턴은 이번 과제를 진행하며 공부하였던 내용 중 하나입니다.\n이전까지 싱글톤이라는 이름을 많이 들어봤으나 싱글톤을 언제 사용해야하는지? 싱글톤의 이점과 문제점은 무엇인지?에 대해서는 자세히 몰랐습니다.</p>\n<p>코드 리뷰를 진행하며 다른 몇몇 지원자들이 싱글톤 패턴을 코드에 적용한 사례를 보고 해당 내용 또한 개념부터 공부를 하며 실제 코드에 적용까지 진행하였습니다.</p>\n<blockquote>\n<p>싱글톤 패턴 정리 자료 링크 : <a href=\"https://velog.io/@seongwon97/%EC%8B%B1%EA%B8%80%ED%86%A4Singleton-%ED%8C%A8%ED%84%B4%EC%9D%B4%EB%9E%80\">싱글톤(Singleton) 패턴이란?</a></p>\n</blockquote>\n<p>싱글톤 패턴을 공부하다보니 이번 과제에서 제가 작성한 코드에서는 model, view, controller, service, repository로 구조를 구성하며 두번째로 프로그래밍한 과제의 <code>Repository</code>부분에 적용을 하는 것이 좋다고 생각됐습니다.</p>\n<p>저는 코드의 repository부분을 실제 데이터를 저장하고 해당 값들을 반환하는 코드들로 구성하였기 때문에 repository부분만큼은 한개의 인스턴스를 사용해야 한다고 생각했습니다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"java\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">public</span><span class=\"mtk4\"> </span><span class=\"mtk9\">class</span><span class=\"mtk4\"> </span><span class=\"mtk11\">ChangeRepository</span><span class=\"mtk4\"> </span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">private</span><span class=\"mtk4\"> </span><span class=\"mtk9\">static</span><span class=\"mtk4\"> </span><span class=\"mtk11\">ChangeRepository</span><span class=\"mtk4\"> instance </span><span class=\"mtk8\">=</span><span class=\"mtk4\"> </span><span class=\"mtk9\">new</span><span class=\"mtk4\"> </span><span class=\"mtk3\">ChangeRepository</span><span class=\"mtk4\">()</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">private</span><span class=\"mtk4\"> </span><span class=\"mtk9\">static</span><span class=\"mtk4\"> </span><span class=\"mtk9\">int</span><span class=\"mtk4\"> change</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">private</span><span class=\"mtk3\"> ChangeRepository</span><span class=\"mtk1\">()</span><span class=\"mtk3\"> </span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">public</span><span class=\"mtk3\"> </span><span class=\"mtk9\">static</span><span class=\"mtk3\"> </span><span class=\"mtk11\">ChangeRepository</span><span class=\"mtk3\"> getInstance</span><span class=\"mtk1\">()</span><span class=\"mtk3\"> </span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> instance;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\"> </span><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>그 결과 ChangeRepository와 같은 모든 repository에 싱글톤 패턴을 적용하여 프로그램 내에서 한개의 인스턴스만이 생성되도록 하였습니다.</p>\n<h2 id=\"3-enum클래스-학습-및-사용\" style=\"position:relative;\"><a href=\"#3-enum%ED%81%B4%EB%9E%98%EC%8A%A4-%ED%95%99%EC%8A%B5-%EB%B0%8F-%EC%82%AC%EC%9A%A9\" aria-label=\"3 enum클래스 학습 및 사용 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Enum클래스 학습 및 사용</h2>\n<p>이번 과제에는 아래의 Coin객체를 사용하는 요구사항이 있었습니다. 평상시에 enum을 별로 사용을 하지 않았던 저는 주어진 객체 코드를 이해하기도 어려웠습니다. 그래서 enum의 기본적인 개념부터 공부를 하며 enum에 대해 익히고 무사히 사용할 수 있었습니다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"java\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">public</span><span class=\"mtk4\"> </span><span class=\"mtk9\">enum</span><span class=\"mtk4\"> </span><span class=\"mtk11\">Coin</span><span class=\"mtk4\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk7\">COIN_500</span><span class=\"mtk4\">(</span><span class=\"mtk7\">500</span><span class=\"mtk4\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk7\">COIN_100</span><span class=\"mtk4\">(</span><span class=\"mtk7\">100</span><span class=\"mtk4\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk7\">COIN_50</span><span class=\"mtk4\">(</span><span class=\"mtk7\">50</span><span class=\"mtk4\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk7\">COIN_10</span><span class=\"mtk4\">(</span><span class=\"mtk7\">10</span><span class=\"mtk4\">)</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">private</span><span class=\"mtk4\"> </span><span class=\"mtk9\">final</span><span class=\"mtk4\"> </span><span class=\"mtk9\">int</span><span class=\"mtk4\"> amount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk3\">Coin</span><span class=\"mtk1\">(</span><span class=\"mtk9\">final</span><span class=\"mtk1\"> </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk4 mtki\">amount</span><span class=\"mtk1\">)</span><span class=\"mtk3\"> </span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">this</span><span class=\"mtk1\">.</span><span class=\"mtk4\">amount</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">}</span></span></span></code></pre>\n<p>enum을 사용하며 프로그래밍을 하다보니 코드의 가독성과 해당 코인 외의 새로운 코인을 추가로 생성할 수 없다는 점에서 안정성이 높아진다는 것을 느끼게 되었습니다.</p>\n<blockquote>\n<p>Enum정리자료 : <a href=\"https://velog.io/@seongwon97/%EC%9E%90%EB%B0%94%EC%9D%98-Enum-%EC%A0%95%EB%B3%B5%ED%95%98%EA%B8%B0\">자바의 Enum 정복하기</a></p>\n</blockquote>\n<h2 id=\"4-stream-학습-및-사용\" style=\"position:relative;\"><a href=\"#4-stream-%ED%95%99%EC%8A%B5-%EB%B0%8F-%EC%82%AC%EC%9A%A9\" aria-label=\"4 stream 학습 및 사용 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Stream 학습 및 사용</h2>\n<p><img src=\"https://images.velog.io/images/seongwon97/post/d75342e2-00d8-4776-a24e-dc3613e6bdd8/image.png\"></p>\n<p>2주차 피드백에는 다음 사진과 같이 <strong>Java에서 제공하는 api를 적극 활용하라</strong>는 피드백이 있었습니다. java에서 많은 api들이 존재하지만 저는 그 중에서도 <code>stream</code>을 공부하여 적용해보았습니다.</p>\n<p>Coin클래스에서 파라미터로 받는 <code>remainMoney</code>보다 적은 돈을 가진 코인의 값들을 list로 반환하는 <code>getAvailableCoinValueList</code>의 코드를 예시로 보겠습니다. 아래의 코드는 <code>Stream</code>을 적용하기 전의 코드입니다. 물론 해당 코드도 depth는 2이고 코드의 길이가 많이 길지 않아 가독성이 떨어지는거 같지는 않습니다. 하지만 저는 배우는 입장이기에 해당 코드를 <code>stream</code>을 적용하여 변경시켜봤습니다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"java\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">public</span><span class=\"mtk4\"> </span><span class=\"mtk9\">static</span><span class=\"mtk4\"> </span><span class=\"mtk11\">List</span><span class=\"mtk8\">&lt;</span><span class=\"mtk4\">Integer</span><span class=\"mtk8\">&gt;</span><span class=\"mtk4\"> </span><span class=\"mtk3\">getAvailableCoinValueList</span><span class=\"mtk4\">(</span><span class=\"mtk9\">int</span><span class=\"mtk4\"> remainMoney) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk11\">List</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">Integer</span><span class=\"mtk1\">&gt;</span><span class=\"mtk4\"> coinValueList </span><span class=\"mtk8\">=</span><span class=\"mtk4\"> </span><span class=\"mtk9\">new</span><span class=\"mtk4\"> </span><span class=\"mtk11\">ArrayList</span><span class=\"mtk1\">&lt;&gt;</span><span class=\"mtk4\">()</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk9\">for</span><span class=\"mtk4\"> (</span><span class=\"mtk11\">Coin</span><span class=\"mtk4\"> c </span><span class=\"mtk9\">:</span><span class=\"mtk4\"> </span><span class=\"mtk11\">Coin</span><span class=\"mtk1\">.</span><span class=\"mtk3\">values</span><span class=\"mtk1\">()</span><span class=\"mtk4\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">            </span><span class=\"mtk9\">if</span><span class=\"mtk4\"> (</span><span class=\"mtk11\">c</span><span class=\"mtk1\">.</span><span class=\"mtk3\">getAmount</span><span class=\"mtk1\">()</span><span class=\"mtk4\"> </span><span class=\"mtk8\">&lt;=</span><span class=\"mtk4\"> remainMoney) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">                </span><span class=\"mtk9\">continue</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">            </span><span class=\"mtk11\">coinValueList</span><span class=\"mtk1\">.</span><span class=\"mtk3\">add</span><span class=\"mtk1\">(</span><span class=\"mtk11\">c</span><span class=\"mtk1\">.</span><span class=\"mtk3\">getAmount</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk9\">return</span><span class=\"mtk4\"> coinValueList</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    }</span></span></span></code></pre>\n<p>stream을 적용한 코드는 다음과 같습니다. 코드에 stream을 적용해보니 확실히 코드의 길이가 간결해졌고 stream을 알고 있다는 가정하에서는 코드의 가독성도 높아진 것 같습니다.</p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"java\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">public</span><span class=\"mtk4\"> </span><span class=\"mtk9\">static</span><span class=\"mtk4\"> </span><span class=\"mtk11\">List</span><span class=\"mtk8\">&lt;</span><span class=\"mtk4\">Integer</span><span class=\"mtk8\">&gt;</span><span class=\"mtk4\"> </span><span class=\"mtk3\">getAvailableCoinValueList</span><span class=\"mtk4\">(</span><span class=\"mtk9\">int</span><span class=\"mtk4\"> remainMoney) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk9\">return</span><span class=\"mtk4\"> </span><span class=\"mtk11\">Arrays</span><span class=\"mtk1\">.</span><span class=\"mtk3\">stream</span><span class=\"mtk1\">(</span><span class=\"mtk11\">Coin</span><span class=\"mtk1\">.</span><span class=\"mtk3\">values</span><span class=\"mtk1\">())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">                </span><span class=\"mtk1\">.</span><span class=\"mtk3\">filter</span><span class=\"mtk1\">(coin </span><span class=\"mtk9\">-&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">coin</span><span class=\"mtk1\">.</span><span class=\"mtk3\">getAmount</span><span class=\"mtk1\">() </span><span class=\"mtk8\">&lt;=</span><span class=\"mtk1\"> remainMoney)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">                </span><span class=\"mtk1\">.</span><span class=\"mtk3\">map</span><span class=\"mtk1\">(Coin</span><span class=\"mtk9\">::</span><span class=\"mtk1\">getAmount)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">                </span><span class=\"mtk1\">.</span><span class=\"mtk3\">sequential</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">                </span><span class=\"mtk1\">.</span><span class=\"mtk3\">collect</span><span class=\"mtk1\">(</span><span class=\"mtk11\">Collectors</span><span class=\"mtk1\">.</span><span class=\"mtk3\">toList</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    }</span></span></span></code></pre>\n<p>stream을 학습하다보니 생각보다 많은 내용이 존재하였습니다. 내용이 너무 많은 만큼 다른 학습 내용과 다르게 따로 정리를 하지는 못하였으나 구글에서 좋은 정리 자료가 있어 공유를 합니다.</p>\n<blockquote>\n<p><strong>참조한 Stream정리자료</strong></p>\n<ul>\n<li><a href=\"https://futurecreator.github.io/2018/08/26/java-8-streams/\">https://futurecreator.github.io/2018/08/26/java-8-streams/</a></li>\n</ul>\n</blockquote>\n<h2 id=\"5-intellij의-단축어-활용\" style=\"position:relative;\"><a href=\"#5-intellij%EC%9D%98-%EB%8B%A8%EC%B6%95%EC%96%B4-%ED%99%9C%EC%9A%A9\" aria-label=\"5 intellij의 단축어 활용 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. IntelliJ의 단축어 활용</h2>\n<p>과제를 진행하며 리펙토링을 많이 하다 보니 불필요한 import들이 많이 발생하였습니다.\n불필요한 import들을 하나씩 제거하다보니 1주차 피드백으로 아래와 같이 IDE의 기능을 활용하라던 피드백이 떠올라 불필요한 import제거를 해주는 단축어는 없는지 찾아봤습니다.</p>\n<p><img src=\"https://images.velog.io/images/seongwon97/post/dfdd448d-16f4-4b45-a065-9eb2d3648913/image.png\"></p>\n<p>검색을 하다보니 실제로 불필요한 import문을 제거하는 단축키가 존재하였고 해당 기능을 적극 활용하여 불필요한 imort문들을 제거하는 작업을 진행하였습니다.</p>\n<blockquote>\n<p><strong>사용하지 않는 import문을 정리하는 단축키</strong>\n윈도우 : Ctrl + Alt + O\nMac OS : ^ + ⌥ + O</p>\n</blockquote>\n<p><img src=\"https://images.velog.io/images/seongwon97/post/2714be18-ca8e-4e55-bd3f-9f7f29f8317f/image.png\"></p>\n<h2 id=\"6-일급-컬렉션-학습\" style=\"position:relative;\"><a href=\"#6-%EC%9D%BC%EA%B8%89-%EC%BB%AC%EB%A0%89%EC%85%98-%ED%95%99%EC%8A%B5\" aria-label=\"6 일급 컬렉션 학습 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 일급 컬렉션 학습</h2>\n<p>2주차 과제를 마치고 코드 리뷰를 하던 중 <a href=\"https://github.com/jayjaehunchoi\">jayjaehunchoi</a> 지원자님의 제출 코드와 학습 정리 자료를 보던 중 <strong>일급 컬렉션</strong>이라는 용어를 처음 접하게 되었습니다. 난생 처음 들어보는 용어인 만큼 나중에라도 도움이 되겠지!라는 마음으로 일급 컬렉션이 무엇인지에 대해 학습을 하고 코드에 적용을 해보고자 하였습니다.</p>\n<p>일급 컬렉션은 <code>final</code>로도 컬렉션의 불변을 만들 수 없기에 하나의 컬렉션을 wrapping하여 만든 것입니다. 하지만 프로젝트를 진행하다보니 컬렉션으로 관리 할 데이터들은 다음 정보들이 존재하였습니다.</p>\n<p><strong>1. 상품 정보(ProductRepository)</strong>\n상품 정보의 경우는 자판기가 상품을 판매하게 된다면 남은 상품의 개수를 변경시켜야 하여 일급 컬렉션을 적용은 불적합하다고 판단이 판단했습니다.\n<strong>2. Machine이 보유한 각각의 Coin개수에 대한 데이터(MachineCoinRepository)</strong>\nCoin의 개수는 초기 설정을 제외하고는 Coin개수가 불변하지만 초기 코인 개수의 설정 메서드에 <code>put()</code>이 사용되어 일급 컬렉션을 구현하였다고는 말을 할 수 없을 것 같습니다. 또 초기 코인 개수의 설정 메서드를 <code>put()</code>을 사용하지 않고 생성자 부분에서 할 수는 있었지만 그러기 위해서는 MachineCoinRepository에 적용한 싱글톤 적용을 풀어야 했기에 일급 컬렉션의 완벽한 적용은 하지 못하였습니다.</p>\n<p>일급 컬렉션의 실제 적용은 못하였지만 새로운 지식을 쌓아갔다는 것으로 만족하며 토요일에 있을 최종 코딩테스트나 이후의 프로그래밍에서는 일급 컬렉션을 적용할 수 있으면 실제 적용을 해보려고 합니다.</p>\n<blockquote>\n<p>일급 컬렉션 정리자료 링크 : <a href=\"https://velog.io/@seongwon97/%EC%9D%BC%EA%B8%89-%EC%BB%AC%EB%A0%89%EC%85%98%EC%9D%B4%EB%9E%80\">일급 컬렉션이란?</a></p>\n</blockquote>\n<h2 id=\"7-상수-위치의-변경\" style=\"position:relative;\"><a href=\"#7-%EC%83%81%EC%88%98-%EC%9C%84%EC%B9%98%EC%9D%98-%EB%B3%80%EA%B2%BD\" aria-label=\"7 상수 위치의 변경 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 상수 위치의 변경</h2>\n<p>2주차까지 과제를 진행하였을 때 메시지를 포함한 모든 상수들은 하나의 클래스 파일을 생성하여 한 곳에서 관리를 하였습니다. 그 당시 저는 한 곳에서 모든 상수를 관리하는 것이 코드가 더 깔끔해 보인다고 생각하여 한 곳에서 관리하였습니다.</p>\n<p>하지만 다른 지원자들의 코드 리뷰를 하며 상수를 사용되는 클래스의 상단에 정의를 하여 사용하는 코드들을 접하다보니 코드를 해당 코드를 처음 접하는 사람의 입장에서는 모든 상수를 한 개의 클래스에 모으는 방법보다 사용되는 클래스 상단에 정의를 하는게 좋을 것 같다는 생각이 들었습니다.</p>\n<p>그래서 이번 과제에서는 에러 메시지를 제외한 모든 상수 값들은 각각의 클래스 상단에 정의를 하였으며 에러 메시지만 기존의 방법처럼 클래스를 새로 생성하여 한 곳에서 관리하였습니다.</p>\n<p><img src=\"https://images.velog.io/images/seongwon97/post/ce3bca4c-5c81-444c-b7ee-0382ab0b555b/image.png\"></p>\n<p>해당 방법에는 정답은 따로 없는 것 같습니다. 하지만 앞으로도 여러 방법을 사용하여 상수들을 관리해보고 더욱 좋은 방법을 찾아보도록 노력하겠습니다.</p>\n<h2 id=\"아쉬웠던-점\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%89%AC%EC%9B%A0%EB%8D%98-%EC%A0%90\" aria-label=\"아쉬웠던 점 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아쉬웠던 점😥</h2>\n<p>이번 과제를 하면서 가장 아쉬웠던 점은 두번째로 작성한 코드에서는 코드를 작성하며 Test코드를 작성하지 못하였던 점이었습니다. MVC패턴을 Model, View, Controll만 적용한 첫번째 코드를 작성하였을 때는 여러 조건에 따라 Test코드를 작성하며 진행을 하였으나 Model, View, Controller, Service, Repository의 구조로 새로운 branch를 만들어 프로그래밍을 하였을 때는 시간에 쫓기는 마음이 들어 Test코드를 작성하지 못하였습니다😥</p>\n<p>물론 첫번째로 프로그래밍하였던 Branch에서 상황별 Test코드를 작성하고 테스트를 진행하여 해당 로직들에 문제가 없는 것을 확인하였으나 새로운 구조로 작성하였던 로직들을 합치는 과정에서 예상치 못하였던 오류들이 발생하여 Test코드 부재에 대해 아쉬움이 남았습니다.</p>\n<hr>\n<h1 id=\"3주차-과제-후기\" style=\"position:relative;\"><a href=\"#3%EC%A3%BC%EC%B0%A8-%EA%B3%BC%EC%A0%9C-%ED%9B%84%EA%B8%B0\" aria-label=\"3주차 과제 후기 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3주차 과제 후기</h1>\n<p>1주차 2주차 과제와 비교하였을 때 확실히 이번 과제는 난의도가 높았던 것 같습니다.\n제가 MVC패턴을 적용 학습을 하며 과제를 진행하여 많은 시간이 걸린 것도 있지만 같은 과제를 다시 진행하였음에도 불구하고 많은 시간이 걸렸던 것 같습니다..</p>\n<p>이번 주차는 MVC패턴을 학습하고 적용하는데 거의 모든 시간을 투자했다고 봐도 무방합니다.\n일주일이라는 기간 동안 MVC 학습에 많은 시간을 투자하였으나 어느까지의 기능이 서비스에서 담당하여야 하고 또 어디까지의 기능이 컨트롤러서 담당해야하는지 헷갈리는 것 같습니다. <strong>해당 내용은 우테코에 합격을 하여 꼭 배우고 싶습니다</strong>🔥🔥🔥</p>\n<p>※ 우테코 프리코스 3주 과정에 대한 최종 후기는 새로운 글로 남기겠습니다.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .one-dark-pro {\n    background-color: #282c34;\n    color: #abb2bf;\n  }\n  .one-dark-pro .mtki { font-style: italic; }\n  .one-dark-pro .mtk9 { color: #C678DD; }\n  .one-dark-pro .mtk4 { color: #E06C75; }\n  .one-dark-pro .mtk11 { color: #E5C07B; }\n  .one-dark-pro .mtk1 { color: #ABB2BF; }\n  .one-dark-pro .mtk8 { color: #56B6C2; }\n  .one-dark-pro .mtk3 { color: #61AFEF; }\n  .one-dark-pro .mtk7 { color: #D19A66; }\n  .one-dark-pro .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li><a href=\"/Woowacourse/2021-12-14-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%203%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#3%EC%A3%BC%EC%B0%A8-%EA%B3%BC%EC%A0%9C%EB%A5%BC-%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0-%EC%95%9E%EC%84%9C\">3주차 과제를 들어가기 앞서</a></li>\n<li>\n<p><a href=\"/Woowacourse/2021-12-14-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%203%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#%EC%9A%B0%ED%85%8C%EC%BD%94-%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4-3%EC%A3%BC%EC%B0%A8-%EA%B3%BC%EC%A0%9C%EB%A7%88%EC%A7%80%EB%A7%89\">우테코 프리코스 3주차 과제(마지막...!)</a></p>\n<ul>\n<li><a href=\"/Woowacourse/2021-12-14-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%203%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#-%EB%AF%B8%EC%85%98-%EA%B0%84%EB%8B%A8-%EC%84%A4%EB%AA%85\">🚀 미션 간단 설명</a></li>\n<li>\n<p><a href=\"/Woowacourse/2021-12-14-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%203%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#-%EC%A0%9C%EC%95%BD%EC%82%AC%ED%95%AD\">🔒 제약사항</a></p>\n<ul>\n<li><a href=\"/Woowacourse/2021-12-14-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%203%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#1-coin\">1. Coin</a></li>\n<li><a href=\"/Woowacourse/2021-12-14-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%203%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#2-%EC%9E%85%EB%A0%A5\">2. 입력</a></li>\n<li><a href=\"/Woowacourse/2021-12-14-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%203%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#3-%EC%B6%9C%EB%A0%A5\">3. 출력</a></li>\n<li><a href=\"/Woowacourse/2021-12-14-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%203%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#4-%EA%B7%B8-%EC%99%B8%EC%9D%98-%EC%A0%9C%EC%95%BD%EC%82%AC%ED%95%AD\">4. 그 외의 제약사항</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/Woowacourse/2021-12-14-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%203%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#-%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4-3%EC%A3%BC%EC%B0%A8%EC%97%90%EC%84%9C-%EB%B0%B0%EC%9A%B4%EC%A0%90\">🎓 프리코스 3주차에서 배운점</a></p>\n<ul>\n<li><a href=\"/Woowacourse/2021-12-14-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%203%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#1-%EC%B2%AB%EC%A7%B8%EB%8F%84-mvc-%EB%91%98%EC%A7%B8%EB%8F%84-mvc-%EC%85%8B%EC%A7%B8%EB%8F%84-mvc\">1. 첫째도 MVC, 둘째도 MVC, 셋째도 MVC!!!!!</a></li>\n<li><a href=\"/Woowacourse/2021-12-14-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%203%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#2-%EC%8B%B1%EA%B8%80%ED%86%A4-%ED%8C%A8%ED%84%B4-%EC%A0%81%EC%9A%A9\">2. 싱글톤 패턴 적용</a></li>\n<li><a href=\"/Woowacourse/2021-12-14-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%203%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#3-enum%ED%81%B4%EB%9E%98%EC%8A%A4-%ED%95%99%EC%8A%B5-%EB%B0%8F-%EC%82%AC%EC%9A%A9\">3. Enum클래스 학습 및 사용</a></li>\n<li><a href=\"/Woowacourse/2021-12-14-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%203%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#4-stream-%ED%95%99%EC%8A%B5-%EB%B0%8F-%EC%82%AC%EC%9A%A9\">4. Stream 학습 및 사용</a></li>\n<li><a href=\"/Woowacourse/2021-12-14-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%203%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#5-intellij%EC%9D%98-%EB%8B%A8%EC%B6%95%EC%96%B4-%ED%99%9C%EC%9A%A9\">5. IntelliJ의 단축어 활용</a></li>\n<li><a href=\"/Woowacourse/2021-12-14-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%203%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#6-%EC%9D%BC%EA%B8%89-%EC%BB%AC%EB%A0%89%EC%85%98-%ED%95%99%EC%8A%B5\">6. 일급 컬렉션 학습</a></li>\n<li><a href=\"/Woowacourse/2021-12-14-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%203%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#7-%EC%83%81%EC%88%98-%EC%9C%84%EC%B9%98%EC%9D%98-%EB%B3%80%EA%B2%BD\">7. 상수 위치의 변경</a></li>\n<li><a href=\"/Woowacourse/2021-12-14-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%203%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#%EC%95%84%EC%89%AC%EC%9B%A0%EB%8D%98-%EC%A0%90\">아쉬웠던 점😥</a></li>\n</ul>\n</li>\n<li><a href=\"/Woowacourse/2021-12-14-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%203%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#3%EC%A3%BC%EC%B0%A8-%EA%B3%BC%EC%A0%9C-%ED%9B%84%EA%B8%B0\">3주차 과제 후기</a></li>\n</ul>","frontmatter":{"date":"2021년 12월 14일","title":"[우테코 프리코스] 3주차 과제 회고","tags":["Woowacourse","회고록"]}}},"pageContext":{"slug":"/Woowacourse/2021-12-14-우테코 프리코스 3주차 과제 회고/","previous":{"fields":{"slug":"/Woowacourse/2021-12-14-우테코_프리코스_3주차_과제회고/"},"frontmatter":{"title":"[우테코 프리코스] 3주차 과제 회고"}},"next":{"fields":{"slug":"/Woowacourse/2021-12-14-우테코-프리코스-참여후기/"},"frontmatter":{"title":"[우테코 프리코스] 프리코스 참여후기"}}}},"staticQueryHashes":["3911196313","4111100897"]}