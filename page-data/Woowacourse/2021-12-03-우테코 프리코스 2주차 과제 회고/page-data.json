{"componentChunkName":"component---src-templates-blog-post-js","path":"/Woowacourse/2021-12-03-우테코 프리코스 2주차 과제 회고/","result":{"data":{"site":{"siteMetadata":{"author":"Seongwon","comment":{"utterances":"Seongwon97/Seongwon97.github.io"},"sponsor":{"buyMeACoffeeId":"seongwon"}}},"markdownRemark":{"excerpt":"프리코스 1주차 피드백 리뷰 프리코스 1주차가 끝나고 2주차 과제가 나오기 앞서 1주차 과제에 대한 공통적인 리뷰를 받았습니다. 크게 정리하면 다음과 같은 리뷰들이 있었습니다. 변수, 메서드, 클래스의 이름이 의도를 드러내며 축약하지 않게 작성하여라 컨벤션을 모두 지켰는가? 지키지 않았으면 IDE의 코드 정렬기능을 활용하여라 의미 없는 주석을 달지 말아라…","html":"<h1 id=\"프리코스-1주차-피드백-리뷰\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4-1%EC%A3%BC%EC%B0%A8-%ED%94%BC%EB%93%9C%EB%B0%B1-%EB%A6%AC%EB%B7%B0\" aria-label=\"프리코스 1주차 피드백 리뷰 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프리코스 1주차 피드백 리뷰</h1>\n<p>프리코스 1주차가 끝나고 2주차 과제가 나오기 앞서 1주차 과제에 대한 공통적인 리뷰를 받았습니다. 크게 정리하면 다음과 같은 리뷰들이 있었습니다.</p>\n<ul>\n<li>변수, 메서드, 클래스의 이름이 의도를 드러내며 축약하지 않게 작성하여라</li>\n<li>컨벤션을 모두 지켰는가? 지키지 않았으면 IDE의 코드 정렬기능을 활용하여라</li>\n<li>의미 없는 주석을 달지 말아라</li>\n<li>코드의 중복이 없도록 구현하여라</li>\n<li>커밋 메시지를 옳바르고 이해가능하게 작성하여라</li>\n<li>매직넘버 대신 상수(<code>static final</code>)로 코드의 가독성을 높여라</li>\n<li>클래스를 상수, 멤버 변수, 생성자, 메서드 순으로 작성하며 구현 순서를 지켜라</li>\n<li>README.md파일을 살아있는 문서를 만들기 위해 노력하여라</li>\n</ul>\n<p>해당 피드백을 보고 1주차에 작성한 과제 코드를 보았더니 대부분의 내용은 지켰으나 <code>코드의 중복</code>이 있는 것을 확인하였습니다. 코드의 완전한 중복은 아니지만 중복된 값이 존재하는지에 대한 여부를 체크하는 기능상의 중복이 있어 해당 기능은 리펙토링하여 하나의 메서드로 묶어주는게 더 좋았을 것 같다는 생각을 하였습니다.</p>\n<hr>\n<h1 id=\"프리코스-2주차-과제\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4-2%EC%A3%BC%EC%B0%A8-%EA%B3%BC%EC%A0%9C\" aria-label=\"프리코스 2주차 과제 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프리코스 2주차 과제</h1>\n<h2 id=\"-미션-간단-설명\" style=\"position:relative;\"><a href=\"#-%EB%AF%B8%EC%85%98-%EA%B0%84%EB%8B%A8-%EC%84%A4%EB%AA%85\" aria-label=\" 미션 간단 설명 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚀 미션 간단 설명</h2>\n<p>해당 미션은 사용자가 입력한 자동차들이 N번의 시도로 Randoms메서드를 통해 나온 결과값에 따라 전진을 하며\nN번의 시도가 끝난 후 최종 우승자를 출력하는 프로그래밍 미션입니다.</p>\n<h2 id=\"-제약사항\" style=\"position:relative;\"><a href=\"#-%EC%A0%9C%EC%95%BD%EC%82%AC%ED%95%AD\" aria-label=\" 제약사항 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔒 제약사항</h2>\n<h3 id=\"1-자동차\" style=\"position:relative;\"><a href=\"#1-%EC%9E%90%EB%8F%99%EC%B0%A8\" aria-label=\"1 자동차 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 자동차</h3>\n<ol>\n<li>주어진 객체 Code를 이용해야 한다.</li>\n<li>전진하는 자동차 출력할 때 이름을 같이 출력해야 한다.</li>\n<li>이름은 5자 이하만 가능하다</li>\n<li>전진 조건 – 0~9사이에서 무작위 값을 구한 후 값이 4이상일 경우 전진한다.</li>\n</ol>\n<h3 id=\"2-입력\" style=\"position:relative;\"><a href=\"#2-%EC%9E%85%EB%A0%A5\" aria-label=\"2 입력 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 입력</h3>\n<ol>\n<li>자동차 이름은 쉼표(,)를 기준으로 구분</li>\n<li>이름은 5자 이하만 가능.</li>\n<li>사용자는 몇번의 이동을 할 것인지 입력할 수 있어야 한다.</li>\n<li>잘못된 입력 값이 있을 경우 IllegalArgunentException을 발생시키고 \"[ERROR]\"로 시작하는 에러 메시지 출력 후 재입력을 받는다.</li>\n</ol>\n<h3 id=\"3-출력\" style=\"position:relative;\"><a href=\"#3-%EC%B6%9C%EB%A0%A5\" aria-label=\"3 출력 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 출력</h3>\n<ul>\n<li>완료 후 우승자를 출력해야 한다.</li>\n<li>우승자는 1명 이상일 수 있으며 여러명일 경우 쉼표를 이용하여 구분한다.)</li>\n<li>각 차수별로 결과를 출력해야한다. (5회 실행이면 5번 결과 출력)</li>\n</ul>\n<h3 id=\"4-프로그래밍-요구사항\" style=\"position:relative;\"><a href=\"#4-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD\" aria-label=\"4 프로그래밍 요구사항 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 프로그래밍 요구사항</h3>\n<ul>\n<li>JDK 8 버전 사용</li>\n<li>Indent를 2까지만 허용</li>\n<li>3항 연산자 사용 금지</li>\n<li>메서드는 최대한 한가지 기능만!</li>\n<li>메서드의 길이가 15라인을 넘지 않도록 구현</li>\n<li>Else 사용 금지! -> if절에서 return 하는 방식으로 구현하도록!</li>\n<li>Random, Scanner API대신 camp.nextstep.edu.missionutils에서 제공하는 Randoms, Console API를 활용!</li>\n<li>\n<p>과제에 제안된 Car객체를 사용해야한다.</p>\n<ul>\n<li>객체의 기본 생성자 추가 금지</li>\n<li>name, position의 접근 제어자인 private 변경 금지!</li>\n<li>가능하다면 setPosition메서드 추가하지 않고 구현하도록!</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"-프리코스-2주차에서-배운점\" style=\"position:relative;\"><a href=\"#-%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4-2%EC%A3%BC%EC%B0%A8%EC%97%90%EC%84%9C-%EB%B0%B0%EC%9A%B4%EC%A0%90\" aria-label=\" 프리코스 2주차에서 배운점 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎓 프리코스 2주차에서 배운점</h2>\n<h3 id=\"1-메서드의-분리로-코드의-가독성-향상\" style=\"position:relative;\"><a href=\"#1-%EB%A9%94%EC%84%9C%EB%93%9C%EC%9D%98-%EB%B6%84%EB%A6%AC%EB%A1%9C-%EC%BD%94%EB%93%9C%EC%9D%98-%EA%B0%80%EB%8F%85%EC%84%B1-%ED%96%A5%EC%83%81\" aria-label=\"1 메서드의 분리로 코드의 가독성 향상 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 메서드의 분리로 코드의 가독성 향상</h3>\n<p>지난주에 앞서 이번주도 코드의 가독성을 향상시키는 것에 많은 학습을 하였습니다.\n과제의 요구사항에 <code>메서드의 길이가 15라인을 넘지 않도록 구현하라</code>라는 요구사항이 있어 이를 지키다보니 시간적 투자가 필요하였으나 결과론적으로 코드의 가독성이 좋아지는 것을 확인할 수 있었습니다.</p>\n<p>아래의 코드는 메서드를 분리하기 전/후의 코드입니다.</p>\n<p><strong>메서드 분리 전</strong></p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"java\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">public</span><span class=\"mtk4\"> </span><span class=\"mtk9\">static</span><span class=\"mtk4\"> </span><span class=\"mtk9\">void</span><span class=\"mtk4\"> </span><span class=\"mtk3\">printFinalResult</span><span class=\"mtk4\">(</span><span class=\"mtk11\">List</span><span class=\"mtk8\">&lt;</span><span class=\"mtk4\">Car</span><span class=\"mtk8\">&gt;</span><span class=\"mtk4\"> carList) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk11\">HashMap</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">Integer</span><span class=\"mtk1\">,</span><span class=\"mtk4\"> </span><span class=\"mtk11\">ArrayList</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">String</span><span class=\"mtk1\">&gt;&gt;</span><span class=\"mtk4\"> rankMap </span><span class=\"mtk8\">=</span><span class=\"mtk4\"> </span><span class=\"mtk9\">new</span><span class=\"mtk4\"> </span><span class=\"mtk11\">HashMap</span><span class=\"mtk1\">&lt;&gt;</span><span class=\"mtk4\">()</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk9\">int</span><span class=\"mtk4\"> maxPosition </span><span class=\"mtk8\">=</span><span class=\"mtk4\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk9\">for</span><span class=\"mtk4\"> (</span><span class=\"mtk11\">Car</span><span class=\"mtk4\"> car </span><span class=\"mtk9\">:</span><span class=\"mtk4\"> carList) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">            </span><span class=\"mtk9\">int</span><span class=\"mtk4\"> carPosition </span><span class=\"mtk8\">=</span><span class=\"mtk4\"> </span><span class=\"mtk11\">car</span><span class=\"mtk1\">.</span><span class=\"mtk3\">getPosition</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">            </span><span class=\"mtk9\">if</span><span class=\"mtk4\"> (maxPosition </span><span class=\"mtk8\">&lt;</span><span class=\"mtk4\"> carPosition) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">                maxPosition </span><span class=\"mtk8\">=</span><span class=\"mtk4\"> carPosition</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">            </span><span class=\"mtk9\">if</span><span class=\"mtk4\"> (</span><span class=\"mtk8\">!</span><span class=\"mtk11\">rankMap</span><span class=\"mtk1\">.</span><span class=\"mtk3\">containsKey</span><span class=\"mtk1\">(carPosition)</span><span class=\"mtk4\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">                </span><span class=\"mtk11\">rankMap</span><span class=\"mtk1\">.</span><span class=\"mtk3\">put</span><span class=\"mtk1\">(carPosition, </span><span class=\"mtk9\">new</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ArrayList</span><span class=\"mtk1\">&lt;&gt;());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">            </span><span class=\"mtk11\">rankMap</span><span class=\"mtk1\">.</span><span class=\"mtk3\">get</span><span class=\"mtk1\">(carPosition).</span><span class=\"mtk3\">add</span><span class=\"mtk1\">(</span><span class=\"mtk11\">car</span><span class=\"mtk1\">.</span><span class=\"mtk3\">getName</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk11\">List</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">String</span><span class=\"mtk1\">&gt;</span><span class=\"mtk4\"> winnerList </span><span class=\"mtk8\">=</span><span class=\"mtk4\"> </span><span class=\"mtk11\">rankMap</span><span class=\"mtk1\">.</span><span class=\"mtk3\">get</span><span class=\"mtk1\">(maxPosition);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk11\">System</span><span class=\"mtk1\">.</span><span class=\"mtk11\">out</span><span class=\"mtk1\">.</span><span class=\"mtk3\">print</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;최종 우승자 : &quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk9\">int</span><span class=\"mtk4\"> winnerListSize </span><span class=\"mtk8\">=</span><span class=\"mtk4\"> </span><span class=\"mtk11\">winnerList</span><span class=\"mtk1\">.</span><span class=\"mtk3\">size</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk9\">for</span><span class=\"mtk4\"> (</span><span class=\"mtk9\">int</span><span class=\"mtk4\"> i</span><span class=\"mtk8\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span><span class=\"mtk4\"> i</span><span class=\"mtk8\">&lt;</span><span class=\"mtk4\"> winnerListSize</span><span class=\"mtk8\">-</span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span><span class=\"mtk4\"> i</span><span class=\"mtk1\">++</span><span class=\"mtk4\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">            </span><span class=\"mtk11\">System</span><span class=\"mtk1\">.</span><span class=\"mtk11\">out</span><span class=\"mtk1\">.</span><span class=\"mtk3\">print</span><span class=\"mtk1\">(</span><span class=\"mtk11\">winnerList</span><span class=\"mtk1\">.</span><span class=\"mtk3\">get</span><span class=\"mtk1\">(i) </span><span class=\"mtk8\">+</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;, &quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk11\">System</span><span class=\"mtk1\">.</span><span class=\"mtk11\">out</span><span class=\"mtk1\">.</span><span class=\"mtk3\">println</span><span class=\"mtk1\">(</span><span class=\"mtk11\">winnerList</span><span class=\"mtk1\">.</span><span class=\"mtk3\">get</span><span class=\"mtk1\">(winnerListSize</span><span class=\"mtk8\">-</span><span class=\"mtk7\">1</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    }</span></span></span></code></pre>\n<p><strong>메서드 분리 후</strong></p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"java\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">public</span><span class=\"mtk4\"> </span><span class=\"mtk9\">static</span><span class=\"mtk4\"> </span><span class=\"mtk9\">void</span><span class=\"mtk4\"> </span><span class=\"mtk3\">printFinalResult</span><span class=\"mtk4\">(</span><span class=\"mtk11\">List</span><span class=\"mtk8\">&lt;</span><span class=\"mtk4\">Car</span><span class=\"mtk8\">&gt;</span><span class=\"mtk4\"> carList) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk11\">List</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">String</span><span class=\"mtk1\">&gt;</span><span class=\"mtk4\"> winnerList </span><span class=\"mtk8\">=</span><span class=\"mtk4\"> </span><span class=\"mtk3\">findWinnerList</span><span class=\"mtk4\">(carList)</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk11\">System</span><span class=\"mtk1\">.</span><span class=\"mtk11\">out</span><span class=\"mtk1\">.</span><span class=\"mtk3\">print</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;최종 우승자 : &quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk9\">int</span><span class=\"mtk4\"> winnerListSize </span><span class=\"mtk8\">=</span><span class=\"mtk4\"> </span><span class=\"mtk11\">winnerList</span><span class=\"mtk1\">.</span><span class=\"mtk3\">size</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk9\">for</span><span class=\"mtk4\"> (</span><span class=\"mtk9\">int</span><span class=\"mtk4\"> i</span><span class=\"mtk8\">=</span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span><span class=\"mtk4\"> i</span><span class=\"mtk8\">&lt;</span><span class=\"mtk4\"> winnerListSize</span><span class=\"mtk8\">-</span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span><span class=\"mtk4\"> i</span><span class=\"mtk1\">++</span><span class=\"mtk4\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">            </span><span class=\"mtk11\">System</span><span class=\"mtk1\">.</span><span class=\"mtk11\">out</span><span class=\"mtk1\">.</span><span class=\"mtk3\">print</span><span class=\"mtk1\">(</span><span class=\"mtk11\">winnerList</span><span class=\"mtk1\">.</span><span class=\"mtk3\">get</span><span class=\"mtk1\">(i) </span><span class=\"mtk8\">+</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&quot;, &quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk11\">System</span><span class=\"mtk1\">.</span><span class=\"mtk11\">out</span><span class=\"mtk1\">.</span><span class=\"mtk3\">println</span><span class=\"mtk1\">(</span><span class=\"mtk11\">winnerList</span><span class=\"mtk1\">.</span><span class=\"mtk3\">get</span><span class=\"mtk1\">(winnerListSize</span><span class=\"mtk8\">-</span><span class=\"mtk7\">1</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">private</span><span class=\"mtk4\"> </span><span class=\"mtk9\">static</span><span class=\"mtk4\"> </span><span class=\"mtk11\">ArrayList</span><span class=\"mtk8\">&lt;</span><span class=\"mtk4\">String</span><span class=\"mtk8\">&gt;</span><span class=\"mtk4\"> </span><span class=\"mtk3\">findWinnerList</span><span class=\"mtk4\">(</span><span class=\"mtk11\">List</span><span class=\"mtk8\">&lt;</span><span class=\"mtk4\">Car</span><span class=\"mtk8\">&gt;</span><span class=\"mtk4\"> carList) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk11\">HashMap</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">Integer</span><span class=\"mtk1\">,</span><span class=\"mtk4\"> </span><span class=\"mtk11\">ArrayList</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">String</span><span class=\"mtk1\">&gt;&gt;</span><span class=\"mtk4\"> rankMap </span><span class=\"mtk8\">=</span><span class=\"mtk4\"> </span><span class=\"mtk9\">new</span><span class=\"mtk4\"> </span><span class=\"mtk11\">HashMap</span><span class=\"mtk1\">&lt;&gt;</span><span class=\"mtk4\">()</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk9\">int</span><span class=\"mtk4\"> maxPosition </span><span class=\"mtk8\">=</span><span class=\"mtk4\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk9\">for</span><span class=\"mtk4\"> (</span><span class=\"mtk11\">Car</span><span class=\"mtk4\"> car </span><span class=\"mtk9\">:</span><span class=\"mtk4\"> carList) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">            </span><span class=\"mtk9\">int</span><span class=\"mtk4\"> carPosition </span><span class=\"mtk8\">=</span><span class=\"mtk4\"> </span><span class=\"mtk11\">car</span><span class=\"mtk1\">.</span><span class=\"mtk3\">getPosition</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">            maxPosition </span><span class=\"mtk8\">=</span><span class=\"mtk4\"> </span><span class=\"mtk11\">Math</span><span class=\"mtk1\">.</span><span class=\"mtk3\">max</span><span class=\"mtk1\">(maxPosition, carPosition);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">            </span><span class=\"mtk9\">if</span><span class=\"mtk4\"> (</span><span class=\"mtk8\">!</span><span class=\"mtk11\">rankMap</span><span class=\"mtk1\">.</span><span class=\"mtk3\">containsKey</span><span class=\"mtk1\">(carPosition)</span><span class=\"mtk4\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">                </span><span class=\"mtk11\">rankMap</span><span class=\"mtk1\">.</span><span class=\"mtk3\">put</span><span class=\"mtk1\">(carPosition, </span><span class=\"mtk9\">new</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ArrayList</span><span class=\"mtk1\">&lt;&gt;());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">            </span><span class=\"mtk11\">rankMap</span><span class=\"mtk1\">.</span><span class=\"mtk3\">get</span><span class=\"mtk1\">(carPosition).</span><span class=\"mtk3\">add</span><span class=\"mtk1\">(</span><span class=\"mtk11\">car</span><span class=\"mtk1\">.</span><span class=\"mtk3\">getName</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">        </span><span class=\"mtk9\">return</span><span class=\"mtk4\"> </span><span class=\"mtk11\">rankMap</span><span class=\"mtk1\">.</span><span class=\"mtk3\">get</span><span class=\"mtk1\">(maxPosition);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    }</span></span></span></code></pre>\n<p>해당 코드를 작성할 때 처음에는 <code>최종 우승자를 찾아서 출력한다!</code>라는 하나의 기능이라고 생각하며 작성였습니다. 하지만 메서드를 작성하여보니 15라인이 넘었고 이를 15라인을 넘기지 않도록 기능을 더 세밀하게 분리하며 <code>우승자 List를 뽑는 메서드</code>, <code>우승자 List를 출력만하는 메서드</code>로 분리하며 구현을 하다 보니 코드의 가독성이 향상된 것을 확인할 수 있었습니다.</p>\n<h3 id=\"2-메서드-이름-설정\" style=\"position:relative;\"><a href=\"#2-%EB%A9%94%EC%84%9C%EB%93%9C-%EC%9D%B4%EB%A6%84-%EC%84%A4%EC%A0%95\" aria-label=\"2 메서드 이름 설정 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 메서드 이름 설정</h3>\n<p>1주차 피드백에서 <code>의미 없는 주석은 달지 않으며 변수와 메서드의 이름을 통해 어떠한 의도인지 드러내라</code>는 피드백을 받고 이름 설정들에 많은 시간이 투자하였습니다.</p>\n<p>이름 설정은 변수보다도 메서드 이름 설정에서 많은 어려움을 느꼈습니다.\n특히 메서드를 기능별로 쪼개어 만들다보니 외부 클래스에서 호출할 public메서드이름과 내부에서 메인 기능을 실행할 private메서드의 이름을 설정하는데 많은 어려움을 느낀 것 같습니다.</p>\n<blockquote>\n<p>Ex) 유저로부터 자동차 이름을 받는 public메서드 이름과 내부적으로 실제 입력을 받는 기능을 담당하는 private메서드의 이름을 구분하여 설정하기 어려웠습니다.\n<strong>작성한 public메서드</strong>는 외부 클래스로부터 호출되고 내부적으로는 private메서드 들을 호출하여 입력값을 받고 exception이 발생하면 옳바른 값을 받을 때까지 반복문을 돌리는 메서드입니다.\n<strong>작성한 private메서드</strong>는 외부 클래스로부터 호출되며 실질적으로 사용자로부터 입력을 받는 코드가 작성되어 있습니다.</p>\n</blockquote>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"java\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">public</span><span class=\"mtk4\"> </span><span class=\"mtk9\">class</span><span class=\"mtk4\"> </span><span class=\"mtk11\">InputUtils</span><span class=\"mtk4\"> </span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">public</span><span class=\"mtk3\"> </span><span class=\"mtk9\">static</span><span class=\"mtk3\"> </span><span class=\"mtk11\">List</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">Car</span><span class=\"mtk1\">&gt;</span><span class=\"mtk3\"> returnCarList</span><span class=\"mtk1\">()</span><span class=\"mtk3\"> </span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">List</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">Car</span><span class=\"mtk1\">&gt; </span><span class=\"mtk4\">carList</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk9\">new</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ArrayList</span><span class=\"mtk1\">&lt;&gt;();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk9\">boolean</span><span class=\"mtk1\"> </span><span class=\"mtk4\">isValid</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk9\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk8\">!</span><span class=\"mtk1\">isValid) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk9\">try</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">System</span><span class=\"mtk1\">.</span><span class=\"mtk11\">out</span><span class=\"mtk1\">.</span><span class=\"mtk3\">println</span><span class=\"mtk1\">(CAR_NAME_INPUT_MESSAGE);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                carList </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">getCarList</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                isValid </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            } </span><span class=\"mtk9\">catch</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">IllegalArgumentException</span><span class=\"mtk1\"> </span><span class=\"mtk4 mtki\">e</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> carList;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">private</span><span class=\"mtk3\"> </span><span class=\"mtk9\">static</span><span class=\"mtk3\"> </span><span class=\"mtk11\">List</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">Car</span><span class=\"mtk1\">&gt;</span><span class=\"mtk3\"> getCarList</span><span class=\"mtk1\">()</span><span class=\"mtk3\"> </span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">List</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">Car</span><span class=\"mtk1\">&gt; </span><span class=\"mtk4\">carList</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk9\">new</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ArrayList</span><span class=\"mtk1\">&lt;&gt;();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">HashSet</span><span class=\"mtk1\">&lt;</span><span class=\"mtk11\">String</span><span class=\"mtk1\">&gt; </span><span class=\"mtk4\">carSet</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk9\">new</span><span class=\"mtk1\"> </span><span class=\"mtk11\">HashSet</span><span class=\"mtk1\">&lt;&gt;();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">String</span><span class=\"mtk1\"> </span><span class=\"mtk4\">input</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Console</span><span class=\"mtk1\">.</span><span class=\"mtk3\">readLine</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">checkCarNameSentence</span><span class=\"mtk1\">(input);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">String</span><span class=\"mtk1\">[] </span><span class=\"mtk4\">carArr</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">input</span><span class=\"mtk1\">.</span><span class=\"mtk3\">split</span><span class=\"mtk1\">(CAR_NAME_SEPARATOR);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">String</span><span class=\"mtk1\"> </span><span class=\"mtk4\">carName</span><span class=\"mtk1\"> </span><span class=\"mtk9\">:</span><span class=\"mtk1\"> carArr) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">checkCarNameWord</span><span class=\"mtk1\">(carName, carSet);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">carList</span><span class=\"mtk1\">.</span><span class=\"mtk3\">add</span><span class=\"mtk1\">(</span><span class=\"mtk9\">new</span><span class=\"mtk1\"> </span><span class=\"mtk3\">Car</span><span class=\"mtk1\">(carName));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">carSet</span><span class=\"mtk1\">.</span><span class=\"mtk3\">add</span><span class=\"mtk1\">(carName);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> carList;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>메서드의 이름 설정은 과제를 진행하면서도 힘들었고 앞으로도 많은 신경을 써야할 부분인 것 같습니다.</p>\n<h3 id=\"3-private-method의-테스트-방법\" style=\"position:relative;\"><a href=\"#3-private-method%EC%9D%98-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%B0%A9%EB%B2%95\" aria-label=\"3 private method의 테스트 방법 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Private Method의 테스트 방법</h3>\n<p>지난주 과제를 진행할 때는 Unit Test에 대해 전반적인 내용에 대해 학습을 하였으나 Private 메서드에 대해 학습하는 방법은 따로 학습을 하지 않았습니다. 하지만 이번 과제를 진행하다 보니 유저로부터 Input 값을 입력받고 input 값에 대한 예외 상황을 처리하는 private 메서드를 많이 만들게 되어 따로 학습을 하게 되었습니다.</p>\n<p>private메서드에 대해 학습한 자세한 내용은 <a href=\"https://velog.io/@seongwon97/Test-Private%EB%A9%94%EC%84%9C%EB%93%9C%EC%9D%98-Unit-Test\">Private메서드의 Unit Test</a>를 통해 확인하실 수 있습니다.</p>\n<p><strong>테스트 코드 예제</strong></p>\n<pre class=\"grvsc-container one-dark-pro\" data-language=\"java\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk4\"> </span><span class=\"mtk11\">org.junit.jupiter.api.DisplayName</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk4\"> </span><span class=\"mtk11\">org.junit.jupiter.api.Test</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk4\"> </span><span class=\"mtk11\">java.lang.reflect.InvocationTargetException</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk4\"> </span><span class=\"mtk11\">java.lang.reflect.Method</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk4\"> </span><span class=\"mtk9\">static</span><span class=\"mtk4\"> </span><span class=\"mtk11\">constant.Constant.*</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">import</span><span class=\"mtk4\"> </span><span class=\"mtk9\">static</span><span class=\"mtk4\"> </span><span class=\"mtk11\">org.assertj.core.api.Assertions.assertThat</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">class</span><span class=\"mtk4\"> </span><span class=\"mtk11\">InputUtilsTest</span><span class=\"mtk4\"> </span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk1\">@</span><span class=\"mtk11\">DisplayName</span><span class=\"mtk4\">(</span><span class=\"mtk6\">&quot;[자동차 이름] 5자리 이상의 이름인 경우&quot;</span><span class=\"mtk4\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk1\">@</span><span class=\"mtk11\">Test</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">    </span><span class=\"mtk9\">public</span><span class=\"mtk3\"> </span><span class=\"mtk9\">void</span><span class=\"mtk3\"> checkCarNameLengthTest</span><span class=\"mtk1\">()</span><span class=\"mtk3\"> </span><span class=\"mtk9\">throws</span><span class=\"mtk3\"> </span><span class=\"mtk11\">NoSuchMethodException</span><span class=\"mtk3\"> </span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">InputUtils</span><span class=\"mtk1\"> </span><span class=\"mtk4\">inputUtils</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk9\">new</span><span class=\"mtk1\"> </span><span class=\"mtk3\">InputUtils</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">Method</span><span class=\"mtk1\"> </span><span class=\"mtk4\">method</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">inputUtils</span><span class=\"mtk1\">.</span><span class=\"mtk3\">getClass</span><span class=\"mtk1\">().</span><span class=\"mtk3\">getDeclaredMethod</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;checkCarNameLength&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">String</span><span class=\"mtk1\">.</span><span class=\"mtk4\">class</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">method</span><span class=\"mtk1\">.</span><span class=\"mtk3\">setAccessible</span><span class=\"mtk1\">(</span><span class=\"mtk7\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk9\">try</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">method</span><span class=\"mtk1\">.</span><span class=\"mtk3\">invoke</span><span class=\"mtk1\">(inputUtils, </span><span class=\"mtk6\">&quot;christopher&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk9\">catch</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">IllegalAccessException</span><span class=\"mtk1\"> </span><span class=\"mtk4 mtki\">e</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">e</span><span class=\"mtk1\">.</span><span class=\"mtk3\">printStackTrace</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk9\">catch</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">InvocationTargetException</span><span class=\"mtk1\"> </span><span class=\"mtk4 mtki\">e</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">assertThat</span><span class=\"mtk1\">(</span><span class=\"mtk11\">e</span><span class=\"mtk1\">.</span><span class=\"mtk3\">getCause</span><span class=\"mtk1\">().</span><span class=\"mtk3\">getMessage</span><span class=\"mtk1\">()).</span><span class=\"mtk3\">isEqualTo</span><span class=\"mtk1\">(ERROR_CAR_NAME_LENGTH);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h2 id=\"최종-후기\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%A2%85-%ED%9B%84%EA%B8%B0\" aria-label=\"최종 후기 permalink\" class=\"toc-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최종 후기</h2>\n<p>이번 과제를 하며 가장 어렵고 시간 투자를 하였던 부분은 메서드, 변수의 이름 설정이었습니다. 1주 차 피드백에서 의미 없는 주석은 달지 않으며 변수와 메서드의 이름을 통해 어떠한 의도인지 드러내라는 피드백을 받고 이름 설정들에 많은 시간이 투자되었던 것 같습니다.</p>\n<p>그래도 1주 차 과제를 하며 Java 프로그래밍 규약 Git 커밋 컨벤션 학습에 많은 시간 투자를 하고 가독성 좋은 프로그래밍을 하기 위해 코드를 수정하며 학습을 하여서 그런지 이번 2주 차 과제는 지난주에 비하여 쉽게 해결할 수 있었습니다. 또한 1주 차 과제를 하며 전반적인 테스트 코드 작성법을 학습하여 2주 차 과제에서의 테스트 코드 작성은 보다 쉽게 할 수 있었으며 테스트 코드 작성을 하다 보니 코드의 안정성과 신뢰성이 높아지는 것 같은 느낌을 받았습니다.</p>\n<p>남은 3주 차 과제도 지금까지 배운 것을 적용하고 추가로 많은 것을 배우며 성장하는 개발자가 되도록 노력하겠습니다.🔥</p>\n<blockquote>\n<p>&#x3C;2021.12.07 추가>\n과제 제출을 한 후 다른 지원자들의 코드를 리뷰해보는 시간을 가지며 많은 이들이 과제에 MVC패턴을 적용한 것을 확인하였습니다.\n이전까지 Spring프레임워크에서만 사용하였던 MVC패턴을 저도 다음 3주차 과제부터는 적용해보고자 MVC패턴을 학습하였습니다.\n📌<a href=\"https://seongwon97.github.io/%EB%94%94%EC%9E%90%EC%9D%B8%20%ED%8C%A8%ED%84%B4/MVC%ED%8C%A8%ED%84%B4%EC%9D%B4%EB%9E%80/MVC%ED%8C%A8%ED%84%B4%EC%9D%B4%EB%9E%80/\">MVC 패턴이란?</a>\n다음 3주차 과제는 MVC패턴을 적용한 보다 나은 코드를 작성하도록 노력해보겠습니다.</p>\n</blockquote>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .one-dark-pro {\n    background-color: #282c34;\n    color: #abb2bf;\n  }\n  .one-dark-pro .mtki { font-style: italic; }\n  .one-dark-pro .mtk4 { color: #E06C75; }\n  .one-dark-pro .mtk9 { color: #C678DD; }\n  .one-dark-pro .mtk3 { color: #61AFEF; }\n  .one-dark-pro .mtk11 { color: #E5C07B; }\n  .one-dark-pro .mtk8 { color: #56B6C2; }\n  .one-dark-pro .mtk1 { color: #ABB2BF; }\n  .one-dark-pro .mtk7 { color: #D19A66; }\n  .one-dark-pro .mtk6 { color: #98C379; }\n  .one-dark-pro .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li><a href=\"/Woowacourse/2021-12-03-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%202%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4-1%EC%A3%BC%EC%B0%A8-%ED%94%BC%EB%93%9C%EB%B0%B1-%EB%A6%AC%EB%B7%B0\">프리코스 1주차 피드백 리뷰</a></li>\n<li>\n<p><a href=\"/Woowacourse/2021-12-03-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%202%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4-2%EC%A3%BC%EC%B0%A8-%EA%B3%BC%EC%A0%9C\">프리코스 2주차 과제</a></p>\n<ul>\n<li><a href=\"/Woowacourse/2021-12-03-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%202%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#-%EB%AF%B8%EC%85%98-%EA%B0%84%EB%8B%A8-%EC%84%A4%EB%AA%85\">🚀 미션 간단 설명</a></li>\n<li>\n<p><a href=\"/Woowacourse/2021-12-03-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%202%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#-%EC%A0%9C%EC%95%BD%EC%82%AC%ED%95%AD\">🔒 제약사항</a></p>\n<ul>\n<li><a href=\"/Woowacourse/2021-12-03-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%202%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#1-%EC%9E%90%EB%8F%99%EC%B0%A8\">1. 자동차</a></li>\n<li><a href=\"/Woowacourse/2021-12-03-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%202%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#2-%EC%9E%85%EB%A0%A5\">2. 입력</a></li>\n<li><a href=\"/Woowacourse/2021-12-03-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%202%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#3-%EC%B6%9C%EB%A0%A5\">3. 출력</a></li>\n<li><a href=\"/Woowacourse/2021-12-03-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%202%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#4-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD\">4. 프로그래밍 요구사항</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/Woowacourse/2021-12-03-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%202%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#-%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4-2%EC%A3%BC%EC%B0%A8%EC%97%90%EC%84%9C-%EB%B0%B0%EC%9A%B4%EC%A0%90\">🎓 프리코스 2주차에서 배운점</a></p>\n<ul>\n<li><a href=\"/Woowacourse/2021-12-03-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%202%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#1-%EB%A9%94%EC%84%9C%EB%93%9C%EC%9D%98-%EB%B6%84%EB%A6%AC%EB%A1%9C-%EC%BD%94%EB%93%9C%EC%9D%98-%EA%B0%80%EB%8F%85%EC%84%B1-%ED%96%A5%EC%83%81\">1. 메서드의 분리로 코드의 가독성 향상</a></li>\n<li><a href=\"/Woowacourse/2021-12-03-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%202%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#2-%EB%A9%94%EC%84%9C%EB%93%9C-%EC%9D%B4%EB%A6%84-%EC%84%A4%EC%A0%95\">2. 메서드 이름 설정</a></li>\n<li><a href=\"/Woowacourse/2021-12-03-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%202%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#3-private-method%EC%9D%98-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%B0%A9%EB%B2%95\">3. Private Method의 테스트 방법</a></li>\n</ul>\n</li>\n<li><a href=\"/Woowacourse/2021-12-03-%EC%9A%B0%ED%85%8C%EC%BD%94%20%ED%94%84%EB%A6%AC%EC%BD%94%EC%8A%A4%202%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C%20%ED%9A%8C%EA%B3%A0/#%EC%B5%9C%EC%A2%85-%ED%9B%84%EA%B8%B0\">최종 후기</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"date":"2021년 12월 03일","title":"[우테코 프리코스] 2주차 과제 회고","tags":["Woowacourse","회고록"]}}},"pageContext":{"slug":"/Woowacourse/2021-12-03-우테코 프리코스 2주차 과제 회고/","previous":{"fields":{"slug":"/Woowacourse/2021-11-28-우테코 프리코스 1주차 과제 회고/"},"frontmatter":{"title":"[우테코 프리코스] 1주차 과제 회고"}},"next":{"fields":{"slug":"/Java/2022-02-18-Unit-Test란/"},"frontmatter":{"title":"JUnit5로 단위 테스트하기"}}}},"staticQueryHashes":["3911196313","4111100897"]}